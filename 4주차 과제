{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/aninsung/Machine-Learning-Programming/blob/main/4%EC%A3%BC%EC%B0%A8%20%EA%B3%BC%EC%A0%9C\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "C3ySZSlZH5wi",
        "outputId": "d177940e-689a-4997-d126-05836b04e2b5"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: tensorflow in /usr/local/lib/python3.12/dist-packages (2.19.0)\n",
            "Requirement already satisfied: absl-py>=1.0.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (1.4.0)\n",
            "Requirement already satisfied: astunparse>=1.6.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (1.6.3)\n",
            "Requirement already satisfied: flatbuffers>=24.3.25 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (25.9.23)\n",
            "Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (0.6.0)\n",
            "Requirement already satisfied: google-pasta>=0.1.1 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (0.2.0)\n",
            "Requirement already satisfied: libclang>=13.0.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (18.1.1)\n",
            "Requirement already satisfied: opt-einsum>=2.3.2 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (3.4.0)\n",
            "Requirement already satisfied: packaging in /usr/local/lib/python3.12/dist-packages (from tensorflow) (25.0)\n",
            "Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<6.0.0dev,>=3.20.3 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (5.29.5)\n",
            "Requirement already satisfied: requests<3,>=2.21.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (2.32.4)\n",
            "Requirement already satisfied: setuptools in /usr/local/lib/python3.12/dist-packages (from tensorflow) (75.2.0)\n",
            "Requirement already satisfied: six>=1.12.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (1.17.0)\n",
            "Requirement already satisfied: termcolor>=1.1.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (3.2.0)\n",
            "Requirement already satisfied: typing-extensions>=3.6.6 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (4.15.0)\n",
            "Requirement already satisfied: wrapt>=1.11.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (2.0.0)\n",
            "Requirement already satisfied: grpcio<2.0,>=1.24.3 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (1.76.0)\n",
            "Requirement already satisfied: tensorboard~=2.19.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (2.19.0)\n",
            "Requirement already satisfied: keras>=3.5.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (3.10.0)\n",
            "Requirement already satisfied: numpy<2.2.0,>=1.26.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (2.0.2)\n",
            "Requirement already satisfied: h5py>=3.11.0 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (3.15.1)\n",
            "Requirement already satisfied: ml-dtypes<1.0.0,>=0.5.1 in /usr/local/lib/python3.12/dist-packages (from tensorflow) (0.5.3)\n",
            "Requirement already satisfied: wheel<1.0,>=0.23.0 in /usr/local/lib/python3.12/dist-packages (from astunparse>=1.6.0->tensorflow) (0.45.1)\n",
            "Requirement already satisfied: rich in /usr/local/lib/python3.12/dist-packages (from keras>=3.5.0->tensorflow) (13.9.4)\n",
            "Requirement already satisfied: namex in /usr/local/lib/python3.12/dist-packages (from keras>=3.5.0->tensorflow) (0.1.0)\n",
            "Requirement already satisfied: optree in /usr/local/lib/python3.12/dist-packages (from keras>=3.5.0->tensorflow) (0.17.0)\n",
            "Requirement already satisfied: charset_normalizer<4,>=2 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.4.4)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.21.0->tensorflow) (3.11)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.21.0->tensorflow) (2.5.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.12/dist-packages (from requests<3,>=2.21.0->tensorflow) (2025.10.5)\n",
            "Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.12/dist-packages (from tensorboard~=2.19.0->tensorflow) (3.9)\n",
            "Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.12/dist-packages (from tensorboard~=2.19.0->tensorflow) (0.7.2)\n",
            "Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.12/dist-packages (from tensorboard~=2.19.0->tensorflow) (3.1.3)\n",
            "Requirement already satisfied: MarkupSafe>=2.1.1 in /usr/local/lib/python3.12/dist-packages (from werkzeug>=1.0.1->tensorboard~=2.19.0->tensorflow) (3.0.3)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.12/dist-packages (from rich->keras>=3.5.0->tensorflow) (4.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.12/dist-packages (from rich->keras>=3.5.0->tensorflow) (2.19.2)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.12/dist-packages (from markdown-it-py>=2.2.0->rich->keras>=3.5.0->tensorflow) (0.1.2)\n"
          ]
        }
      ],
      "source": [
        "!pip install tensorflow"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "nazZQ8NpSqVs"
      },
      "outputs": [],
      "source": [
        "# --- 1. 라이브러리 임포트 ---\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import glob  # 파일 경로 탐색\n",
        "import os    # 파일명/경로 처리\n",
        "import tensorflow as tf\n",
        "# import tensorflow_addons as tfa  <- 제거됨\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "from tensorflow.keras.models import Model\n",
        "from tensorflow.keras.layers import (Input, Conv1D, BatchNormalization,\n",
        "                                     Activation, MaxPooling1D, Dropout, GRU, Dense)\n",
        "from tensorflow.keras.regularizers import l2 # L2 규제\n",
        "from tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau\n",
        "from sklearn.preprocessing import StandardScaler, OneHotEncoder\n",
        "from sklearn.metrics import f1_score, classification_report, confusion_matrix\n",
        "from sklearn.utils.class_weight import compute_class_weight # [추가]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "sVY57KJdGB6S"
      },
      "outputs": [],
      "source": [
        "# --- 2. 하이퍼파라미터 및 상수 정의 ---\n",
        "# (기존과 동일)\n",
        "DATA_PATH_PATTERN = \"/content/drive/MyDrive/Colab Notebooks/mhealth+dataset/MHEALTHDATASET/mHealth_subject*.log\"\n",
        "SENSOR_COLS = [0, 1, 2, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 18, 19]\n",
        "LABEL_COL = 23\n",
        "NUM_CHANNELS = len(SENSOR_COLS)\n",
        "NUM_CLASSES = 12\n",
        "WINDOW_SIZE = 125\n",
        "OVERLAP_STEP = 62\n",
        "EPOCHS = 100\n",
        "BATCH_SIZE = 64\n",
        "TEST_SUBJECT_PAIRS = [[1, 2], [3, 4], [5, 6], [7, 8], [9, 10]]\n",
        "N_SPLITS = len(TEST_SUBJECT_PAIRS)\n",
        "ACTIVITY_NAMES = [f\"Act_{i+1}\" for i in range(NUM_CLASSES)]"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "EXVjxqKhGB3-"
      },
      "outputs": [],
      "source": [
        "def load_and_preprocess_data(path_pattern, window_size, step):\n",
        "    \"\"\"\n",
        "    mHealth .log 파일들을 읽어와 전처리 및 슬라이딩 윈도우를 적용합니다.\n",
        "    - 활동 레이블 0 (Null)은 제외합니다.\n",
        "    - 활동 레이블 1~12를 0~11로 리매핑합니다.\n",
        "    - 활동 경계를 넘어가는 윈도우를 생성하지 않습니다.\n",
        "    \"\"\"\n",
        "    all_files = glob.glob(path_pattern)\n",
        "    all_files.sort()\n",
        "\n",
        "    X_list, y_list, group_list = [], [], []\n",
        "\n",
        "    print(f\"총 {len(all_files)}개의 피험자 파일을 로드합니다...\")\n",
        "\n",
        "    for file_path in all_files:\n",
        "        subject_id = int(os.path.basename(file_path).replace(\"mHealth_subject\", \"\").replace(\".log\", \"\"))\n",
        "        df = pd.read_csv(file_path, sep='\\t', header=None)\n",
        "\n",
        "        # --- 2. 데이터 전처리 (레이블 0 필터링) ---\n",
        "        df_filtered = df[df[LABEL_COL] > 0].copy()\n",
        "        df_filtered[LABEL_COL] = df_filtered[LABEL_COL] - 1 # 1~12 -> 0~11\n",
        "\n",
        "        print(f\"  - 피험자 {subject_id} 로드 완료. (총 {len(df_filtered)} 스텝)\")\n",
        "\n",
        "        # --- 3. 슬라이딩 윈도우 (활동 경계 보존) ---\n",
        "        df_filtered['block_id'] = (df_filtered[LABEL_COL].diff().ne(0)).cumsum()\n",
        "\n",
        "        for block_group in df_filtered.groupby('block_id'):\n",
        "            block_data = block_group[1][SENSOR_COLS].values\n",
        "            block_label = block_group[1][LABEL_COL].iloc[0]\n",
        "\n",
        "            for i in range(0, len(block_data) - window_size + 1, step):\n",
        "                window = block_data[i : i + window_size]\n",
        "                X_list.append(window)\n",
        "                y_list.append(block_label)\n",
        "                group_list.append(subject_id)\n",
        "\n",
        "    print(\"윈도우 생성 완료.\")\n",
        "\n",
        "    return np.array(X_list), np.array(y_list), np.array(group_list)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pwgmF-LaGB1o",
        "outputId": "109d81b1-40ed-4152-88cb-220c04d26ea8"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "총 10개의 피험자 파일을 로드합니다...\n",
            "  - 피험자 1 로드 완료. (총 35174 스텝)\n",
            "  - 피험자 10 로드 완료. (총 33690 스텝)\n",
            "  - 피험자 2 로드 완료. (총 35532 스텝)\n",
            "  - 피험자 3 로드 완료. (총 35380 스텝)\n",
            "  - 피험자 4 로드 완료. (총 35328 스텝)\n",
            "  - 피험자 5 로드 완료. (총 33947 스텝)\n",
            "  - 피험자 6 로드 완료. (총 32205 스텝)\n",
            "  - 피험자 7 로드 완료. (총 34253 스텝)\n",
            "  - 피험자 8 로드 완료. (총 33332 스텝)\n",
            "  - 피험자 9 로드 완료. (총 34354 스텝)\n",
            "윈도우 생성 완료.\n",
            "\n",
            "--- 최종 데이터 형태 ---\n",
            "X shape (윈도우 수, 윈도우 크기, 채널 수): (5352, 125, 15)\n",
            "y shape (원-핫 인코딩): (5352, 12)\n",
            "Groups shape (피험자 ID): (5352,)\n"
          ]
        }
      ],
      "source": [
        "# --- 1. 데이터 로드 실행 ---\n",
        "X, y_labels, groups = load_and_preprocess_data(DATA_PATH_PATTERN, WINDOW_SIZE, OVERLAP_STEP)\n",
        "\n",
        "# --- 2. y 레이블 원-핫 인코딩 ---\n",
        "encoder = OneHotEncoder(sparse_output=False)\n",
        "y = encoder.fit_transform(y_labels.reshape(-1, 1))\n",
        "\n",
        "print(\"\\n--- 최종 데이터 형태 ---\")\n",
        "print(f\"X shape (윈도우 수, 윈도우 크기, 채널 수): {X.shape}\")\n",
        "print(f\"y shape (원-핫 인코딩): {y.shape}\")\n",
        "print(f\"Groups shape (피험자 ID): {groups.shape}\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 952
        },
        "id": "txYO6nnVGDvg",
        "outputId": "66f86a6d-a8d9-484d-dd19-e0243aa08af3"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"functional\"</span>\n",
              "</pre>\n"
            ],
            "text/plain": [
              "\u001b[1mModel: \"functional\"\u001b[0m\n"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
              "┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
              "│ input_layer (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">InputLayer</span>)        │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">15</span>)        │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │         <span style=\"color: #00af00; text-decoration-color: #00af00\">4,352</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │           <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span> │\n",
              "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)         │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │         <span style=\"color: #00af00; text-decoration-color: #00af00\">9,248</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization_1           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │           <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span> │\n",
              "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">125</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)        │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ max_pooling1d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling1D</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">32</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">14,400</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization_2           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n",
              "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv1D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │        <span style=\"color: #00af00; text-decoration-color: #00af00\">28,736</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization_3           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n",
              "│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Activation</span>)       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">62</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ max_pooling1d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling1D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">31</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)         │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ gru (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">GRU</span>)                       │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)             │        <span style=\"color: #00af00; text-decoration-color: #00af00\">46,656</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">96</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">6,208</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)             │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>)             │           <span style=\"color: #00af00; text-decoration-color: #00af00\">780</span> │\n",
              "└─────────────────────────────────┴────────────────────────┴───────────────┘\n",
              "</pre>\n"
            ],
            "text/plain": [
              "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n",
              "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
              "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n",
              "│ input_layer (\u001b[38;5;33mInputLayer\u001b[0m)        │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m15\u001b[0m)        │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d (\u001b[38;5;33mConv1D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │         \u001b[38;5;34m4,352\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │           \u001b[38;5;34m128\u001b[0m │\n",
              "│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation (\u001b[38;5;33mActivation\u001b[0m)         │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout (\u001b[38;5;33mDropout\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d_1 (\u001b[38;5;33mConv1D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │         \u001b[38;5;34m9,248\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization_1           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │           \u001b[38;5;34m128\u001b[0m │\n",
              "│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation_1 (\u001b[38;5;33mActivation\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m125\u001b[0m, \u001b[38;5;34m32\u001b[0m)        │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ max_pooling1d (\u001b[38;5;33mMaxPooling1D\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m32\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d_2 (\u001b[38;5;33mConv1D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │        \u001b[38;5;34m14,400\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization_2           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │           \u001b[38;5;34m256\u001b[0m │\n",
              "│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation_2 (\u001b[38;5;33mActivation\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ conv1d_3 (\u001b[38;5;33mConv1D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │        \u001b[38;5;34m28,736\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ batch_normalization_3           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │           \u001b[38;5;34m256\u001b[0m │\n",
              "│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ activation_3 (\u001b[38;5;33mActivation\u001b[0m)       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m62\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ max_pooling1d_1 (\u001b[38;5;33mMaxPooling1D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m31\u001b[0m, \u001b[38;5;34m64\u001b[0m)         │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ gru (\u001b[38;5;33mGRU\u001b[0m)                       │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m96\u001b[0m)             │        \u001b[38;5;34m46,656\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m96\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │         \u001b[38;5;34m6,208\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dropout_3 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m64\u001b[0m)             │             \u001b[38;5;34m0\u001b[0m │\n",
              "├─────────────────────────────────┼────────────────────────┼───────────────┤\n",
              "│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m12\u001b[0m)             │           \u001b[38;5;34m780\u001b[0m │\n",
              "└─────────────────────────────────┴────────────────────────┴───────────────┘\n"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">111,148</span> (434.17 KB)\n",
              "</pre>\n"
            ],
            "text/plain": [
              "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m111,148\u001b[0m (434.17 KB)\n"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">110,764</span> (432.67 KB)\n",
              "</pre>\n"
            ],
            "text/plain": [
              "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m110,764\u001b[0m (432.67 KB)\n"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "data": {
            "text/html": [
              "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">384</span> (1.50 KB)\n",
              "</pre>\n"
            ],
            "text/plain": [
              "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m384\u001b[0m (1.50 KB)\n"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "def build_hybrid_cnn_gru_model(input_shape, num_classes):\n",
        "    \"\"\"\n",
        "    [최종 튜닝] 1D CNN + GRU 모델 (L2 규제, Dropout 강화)\n",
        "    \"\"\"\n",
        "    l2_reg = 1e-2  # L2 규제(Weight Decay) 강도 (유지)\n",
        "\n",
        "    inputs = Input(shape=input_shape)\n",
        "\n",
        "    # [축소] CNN Block 1\n",
        "    x = Conv1D(filters=32, kernel_size=9, padding='same', kernel_regularizer=l2(l2_reg))(inputs)\n",
        "    x = BatchNormalization()(x)\n",
        "    x = Activation('relu')(x)\n",
        "    x = Dropout(0.4)(x) # [수정] 0.3 -> 0.4\n",
        "    x = Conv1D(filters=32, kernel_size=9, padding='same', kernel_regularizer=l2(l2_reg))(x)\n",
        "    x = BatchNormalization()(x)\n",
        "    x = Activation('relu')(x)\n",
        "    x = MaxPooling1D(pool_size=2)(x)\n",
        "\n",
        "    # [축소] CNN Block 2\n",
        "    x = Conv1D(filters=64, kernel_size=7, padding='same', kernel_regularizer=l2(l2_reg))(x)\n",
        "    x = BatchNormalization()(x)\n",
        "    x = Activation('relu')(x)\n",
        "    x = Dropout(0.4)(x) # [수정] 0.3 -> 0.4\n",
        "    x = Conv1D(filters=64, kernel_size=7, padding='same', kernel_regularizer=l2(l2_reg))(x)\n",
        "    x = BatchNormalization()(x)\n",
        "    x = Activation('relu')(x)\n",
        "    x = MaxPooling1D(pool_size=2)(x)\n",
        "\n",
        "    # [축소] GRU Block\n",
        "    x = GRU(96, return_sequences=False, kernel_regularizer=l2(l2_reg))(x)\n",
        "    x = Dropout(0.5)(x) # [수정] 0.4 -> 0.5\n",
        "\n",
        "    # [축소] Classifier\n",
        "    x = Dense(64, activation='relu', kernel_regularizer=l2(l2_reg))(x)\n",
        "    x = Dropout(0.5)(x) # (유지)\n",
        "\n",
        "    outputs = Dense(num_classes, activation='softmax')(x)\n",
        "\n",
        "    model = Model(inputs=inputs, outputs=outputs)\n",
        "    return model\n",
        "\n",
        "# 모델 구조 테스트 (옵션)\n",
        "test_model = build_hybrid_cnn_gru_model((WINDOW_SIZE, NUM_CHANNELS), NUM_CLASSES)\n",
        "test_model.summary()\n",
        "del test_model"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "szvxJyAxGDtM"
      },
      "outputs": [],
      "source": [
        "def plot_confusion_matrix(cm, class_names, title):\n",
        "    \"\"\"\n",
        "    Confusion Matrix를 Seaborn Heatmap으로 시각화합니다.\n",
        "    \"\"\"\n",
        "    plt.figure(figsize=(12, 10))\n",
        "    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues',\n",
        "                xticklabels=class_names, yticklabels=class_names)\n",
        "    plt.title(title)\n",
        "    plt.ylabel('True Label')\n",
        "    plt.xlabel('Predicted Label')\n",
        "    plt.show()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true,
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "DRPx1Dy-Suz4",
        "outputId": "d6aa9862-57c5-4f7f-f303-bcc37d0e9c73"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "--- 5-Fold 교차 검증(수동 지정) 시작 ---\n",
            "\n",
            "================= FOLD 1/5 ==================\n",
            "Train Subjects: [ 3  4  5  6  7  8  9 10]\n",
            "Test Subjects: [1, 2]\n",
            "X_train shape: (4248, 125, 15), X_test shape: (1104, 125, 15)\n",
            "Class Weights (Fold 1): {0: np.float64(0.921875), 1: np.float64(0.921875), 2: np.float64(0.921875), 3: np.float64(0.921875), 4: np.float64(0.921875), 5: np.float64(1.0290697674418605), 6: np.float64(0.9860724233983287), 7: np.float64(1.0056818181818181), 8: np.float64(0.921875), 9: np.float64(0.921875), 10: np.float64(0.921875), 11: np.float64(2.925619834710744)}\n",
            "\n",
            "--- 훈련 시작 ---\n",
            "Epoch 1/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m18s\u001b[0m 133ms/step - accuracy: 0.1682 - loss: 5.6122 - val_accuracy: 0.6565 - val_loss: 4.6490 - learning_rate: 5.0000e-04\n",
            "Epoch 2/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 154ms/step - accuracy: 0.4730 - loss: 4.3035 - val_accuracy: 0.6753 - val_loss: 3.7577 - learning_rate: 5.0000e-04\n",
            "Epoch 3/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 171ms/step - accuracy: 0.6578 - loss: 3.4427 - val_accuracy: 0.6729 - val_loss: 3.1023 - learning_rate: 5.0000e-04\n",
            "Epoch 4/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 129ms/step - accuracy: 0.7757 - loss: 2.8445 - val_accuracy: 0.7388 - val_loss: 2.6550 - learning_rate: 5.0000e-04\n",
            "Epoch 5/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 141ms/step - accuracy: 0.8894 - loss: 2.3854 - val_accuracy: 0.8235 - val_loss: 2.2934 - learning_rate: 5.0000e-04\n",
            "Epoch 6/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 163ms/step - accuracy: 0.9416 - loss: 2.0481 - val_accuracy: 0.8141 - val_loss: 2.0969 - learning_rate: 5.0000e-04\n",
            "Epoch 7/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9628 - loss: 1.8080 - val_accuracy: 0.6471 - val_loss: 2.1799 - learning_rate: 5.0000e-04\n",
            "Epoch 8/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 125ms/step - accuracy: 0.9542 - loss: 1.6690 - val_accuracy: 0.8988 - val_loss: 1.5281 - learning_rate: 5.0000e-04\n",
            "Epoch 9/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 152ms/step - accuracy: 0.9823 - loss: 1.4908 - val_accuracy: 0.9506 - val_loss: 1.3949 - learning_rate: 5.0000e-04\n",
            "Epoch 10/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 167ms/step - accuracy: 0.9855 - loss: 1.3712 - val_accuracy: 0.7576 - val_loss: 1.8085 - learning_rate: 5.0000e-04\n",
            "Epoch 11/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9861 - loss: 1.2741 - val_accuracy: 0.9482 - val_loss: 1.2328 - learning_rate: 5.0000e-04\n",
            "Epoch 12/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 158ms/step - accuracy: 0.9700 - loss: 1.2421 - val_accuracy: 0.9976 - val_loss: 1.0282 - learning_rate: 5.0000e-04\n",
            "Epoch 13/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9705 - loss: 1.1993 - val_accuracy: 0.9976 - val_loss: 0.9742 - learning_rate: 5.0000e-04\n",
            "Epoch 14/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 132ms/step - accuracy: 0.9876 - loss: 1.1065 - val_accuracy: 0.9976 - val_loss: 0.9279 - learning_rate: 5.0000e-04\n",
            "Epoch 15/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 162ms/step - accuracy: 0.9975 - loss: 1.0380 - val_accuracy: 0.9106 - val_loss: 1.0587 - learning_rate: 5.0000e-04\n",
            "Epoch 16/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 124ms/step - accuracy: 0.9762 - loss: 1.0668 - val_accuracy: 0.9600 - val_loss: 0.9868 - learning_rate: 5.0000e-04\n",
            "Epoch 17/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 159ms/step - accuracy: 0.9835 - loss: 1.0440 - val_accuracy: 0.9953 - val_loss: 0.8622 - learning_rate: 5.0000e-04\n",
            "Epoch 18/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9967 - loss: 0.9687 - val_accuracy: 1.0000 - val_loss: 0.8220 - learning_rate: 5.0000e-04\n",
            "Epoch 19/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9972 - loss: 0.9342 - val_accuracy: 0.9247 - val_loss: 0.9357 - learning_rate: 5.0000e-04\n",
            "Epoch 20/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9937 - loss: 0.9274 - val_accuracy: 0.9647 - val_loss: 0.8992 - learning_rate: 5.0000e-04\n",
            "Epoch 21/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 126ms/step - accuracy: 0.9956 - loss: 0.8989 - val_accuracy: 0.9059 - val_loss: 0.9911 - learning_rate: 5.0000e-04\n",
            "Epoch 22/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 122ms/step - accuracy: 0.9849 - loss: 0.9252 - val_accuracy: 0.9435 - val_loss: 0.9123 - learning_rate: 5.0000e-04\n",
            "Epoch 23/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9506 - loss: 1.0189 - val_accuracy: 0.9976 - val_loss: 0.7933 - learning_rate: 5.0000e-04\n",
            "Epoch 24/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9858 - loss: 0.9160 - val_accuracy: 0.9929 - val_loss: 0.7675 - learning_rate: 5.0000e-04\n",
            "Epoch 25/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9882 - loss: 0.8973 - val_accuracy: 0.9906 - val_loss: 0.7816 - learning_rate: 5.0000e-04\n",
            "Epoch 26/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.9829 - loss: 0.8923 - val_accuracy: 0.9882 - val_loss: 0.7830 - learning_rate: 5.0000e-04\n",
            "Epoch 27/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 121ms/step - accuracy: 0.9854 - loss: 0.8846 - val_accuracy: 0.8988 - val_loss: 0.9458 - learning_rate: 5.0000e-04\n",
            "Epoch 28/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 154ms/step - accuracy: 0.9708 - loss: 0.9359 - val_accuracy: 1.0000 - val_loss: 0.7653 - learning_rate: 5.0000e-04\n",
            "Epoch 29/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9926 - loss: 0.8806 - val_accuracy: 0.9976 - val_loss: 0.7535 - learning_rate: 5.0000e-04\n",
            "Epoch 30/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9744 - loss: 0.9270 - val_accuracy: 1.0000 - val_loss: 0.7546 - learning_rate: 5.0000e-04\n",
            "Epoch 31/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 158ms/step - accuracy: 0.9969 - loss: 0.8574 - val_accuracy: 1.0000 - val_loss: 0.7329 - learning_rate: 5.0000e-04\n",
            "Epoch 32/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9938 - loss: 0.8450 - val_accuracy: 1.0000 - val_loss: 0.7194 - learning_rate: 5.0000e-04\n",
            "Epoch 33/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 145ms/step - accuracy: 0.9954 - loss: 0.8320 - val_accuracy: 1.0000 - val_loss: 0.7072 - learning_rate: 5.0000e-04\n",
            "Epoch 34/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 156ms/step - accuracy: 0.9983 - loss: 0.8075 - val_accuracy: 0.9953 - val_loss: 0.7032 - learning_rate: 5.0000e-04\n",
            "Epoch 35/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9936 - loss: 0.8130 - val_accuracy: 1.0000 - val_loss: 0.6926 - learning_rate: 5.0000e-04\n",
            "Epoch 36/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9976 - loss: 0.7899 - val_accuracy: 1.0000 - val_loss: 0.6856 - learning_rate: 5.0000e-04\n",
            "Epoch 37/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 140ms/step - accuracy: 0.9919 - loss: 0.8026 - val_accuracy: 1.0000 - val_loss: 0.6812 - learning_rate: 5.0000e-04\n",
            "Epoch 38/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 121ms/step - accuracy: 0.9974 - loss: 0.7876 - val_accuracy: 0.9788 - val_loss: 0.7155 - learning_rate: 5.0000e-04\n",
            "Epoch 39/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 137ms/step - accuracy: 0.9835 - loss: 0.8229 - val_accuracy: 0.9976 - val_loss: 0.6899 - learning_rate: 5.0000e-04\n",
            "Epoch 40/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 152ms/step - accuracy: 0.9860 - loss: 0.8193 - val_accuracy: 0.8824 - val_loss: 0.8258 - learning_rate: 5.0000e-04\n",
            "Epoch 41/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9200 - loss: 0.8832 - val_accuracy: 0.9929 - val_loss: 0.7613 - learning_rate: 5.0000e-04\n",
            "Epoch 42/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9738 - loss: 0.8335 - val_accuracy: 0.8518 - val_loss: 1.1794 - learning_rate: 5.0000e-04\n",
            "Epoch 43/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 141ms/step - accuracy: 0.9775 - loss: 0.8462 - val_accuracy: 0.9200 - val_loss: 1.0089 - learning_rate: 5.0000e-04\n",
            "Epoch 44/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 130ms/step - accuracy: 0.9955 - loss: 0.7986 - val_accuracy: 1.0000 - val_loss: 0.6864 - learning_rate: 5.0000e-04\n",
            "Epoch 45/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9933 - loss: 0.7996 - val_accuracy: 1.0000 - val_loss: 0.6763 - learning_rate: 5.0000e-04\n",
            "Epoch 46/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 143ms/step - accuracy: 0.9963 - loss: 0.7835 - val_accuracy: 1.0000 - val_loss: 0.6719 - learning_rate: 5.0000e-04\n",
            "Epoch 47/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 135ms/step - accuracy: 0.9986 - loss: 0.7687 - val_accuracy: 1.0000 - val_loss: 0.6569 - learning_rate: 5.0000e-04\n",
            "Epoch 48/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 160ms/step - accuracy: 0.9910 - loss: 0.7802 - val_accuracy: 0.9953 - val_loss: 0.6761 - learning_rate: 5.0000e-04\n",
            "Epoch 49/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 124ms/step - accuracy: 0.9961 - loss: 0.7662 - val_accuracy: 0.9976 - val_loss: 0.6616 - learning_rate: 5.0000e-04\n",
            "Epoch 50/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 159ms/step - accuracy: 0.9473 - loss: 0.8916 - val_accuracy: 0.9906 - val_loss: 0.7129 - learning_rate: 5.0000e-04\n",
            "Epoch 51/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 171ms/step - accuracy: 0.9959 - loss: 0.7787 - val_accuracy: 1.0000 - val_loss: 0.6636 - learning_rate: 5.0000e-04\n",
            "Epoch 52/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 127ms/step - accuracy: 0.9978 - loss: 0.7587 - val_accuracy: 1.0000 - val_loss: 0.6492 - learning_rate: 5.0000e-04\n",
            "Epoch 53/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 150ms/step - accuracy: 0.9969 - loss: 0.7539 - val_accuracy: 1.0000 - val_loss: 0.6424 - learning_rate: 5.0000e-04\n",
            "Epoch 54/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9991 - loss: 0.7380 - val_accuracy: 0.9976 - val_loss: 0.6388 - learning_rate: 5.0000e-04\n",
            "Epoch 55/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 124ms/step - accuracy: 0.9925 - loss: 0.7485 - val_accuracy: 0.9953 - val_loss: 0.6578 - learning_rate: 5.0000e-04\n",
            "Epoch 56/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9734 - loss: 0.8325 - val_accuracy: 0.9929 - val_loss: 0.7042 - learning_rate: 5.0000e-04\n",
            "Epoch 57/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 132ms/step - accuracy: 0.9952 - loss: 0.7864 - val_accuracy: 0.9929 - val_loss: 0.6856 - learning_rate: 5.0000e-04\n",
            "Epoch 58/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 146ms/step - accuracy: 0.9936 - loss: 0.7843 - val_accuracy: 0.9929 - val_loss: 0.6833 - learning_rate: 5.0000e-04\n",
            "Epoch 59/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 157ms/step - accuracy: 0.9924 - loss: 0.7848 - val_accuracy: 0.9953 - val_loss: 0.6788 - learning_rate: 5.0000e-04\n",
            "Epoch 60/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 139ms/step - accuracy: 0.9872 - loss: 0.8107 - val_accuracy: 0.9976 - val_loss: 0.6679 - learning_rate: 5.0000e-04\n",
            "Epoch 61/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 207ms/step - accuracy: 0.9968 - loss: 0.7563 - val_accuracy: 0.9953 - val_loss: 0.6572 - learning_rate: 5.0000e-04\n",
            "Epoch 62/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - accuracy: 0.9963 - loss: 0.7497\n",
            "Epoch 62: ReduceLROnPlateau reducing learning rate to 0.00010000000474974513.\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9963 - loss: 0.7497 - val_accuracy: 1.0000 - val_loss: 0.6463 - learning_rate: 5.0000e-04\n",
            "Epoch 63/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 122ms/step - accuracy: 0.9943 - loss: 0.7604 - val_accuracy: 1.0000 - val_loss: 0.6435 - learning_rate: 1.0000e-04\n",
            "Epoch 64/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 144ms/step - accuracy: 0.9997 - loss: 0.7363 - val_accuracy: 1.0000 - val_loss: 0.6421 - learning_rate: 1.0000e-04\n",
            "Epoch 65/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9992 - loss: 0.7411 - val_accuracy: 1.0000 - val_loss: 0.6400 - learning_rate: 1.0000e-04\n",
            "Epoch 66/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 122ms/step - accuracy: 0.9987 - loss: 0.7392 - val_accuracy: 1.0000 - val_loss: 0.6375 - learning_rate: 1.0000e-04\n",
            "Epoch 67/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 127ms/step - accuracy: 0.9990 - loss: 0.7357 - val_accuracy: 1.0000 - val_loss: 0.6368 - learning_rate: 1.0000e-04\n",
            "Epoch 68/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9977 - loss: 0.7349 - val_accuracy: 1.0000 - val_loss: 0.6344 - learning_rate: 1.0000e-04\n",
            "Epoch 69/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 121ms/step - accuracy: 0.9995 - loss: 0.7276 - val_accuracy: 1.0000 - val_loss: 0.6327 - learning_rate: 1.0000e-04\n",
            "Epoch 70/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9999 - loss: 0.7347 - val_accuracy: 1.0000 - val_loss: 0.6309 - learning_rate: 1.0000e-04\n",
            "Epoch 71/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 142ms/step - accuracy: 0.9989 - loss: 0.7247 - val_accuracy: 1.0000 - val_loss: 0.6287 - learning_rate: 1.0000e-04\n",
            "Epoch 72/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 137ms/step - accuracy: 0.9971 - loss: 0.7218 - val_accuracy: 1.0000 - val_loss: 0.6281 - learning_rate: 1.0000e-04\n",
            "Epoch 73/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9995 - loss: 0.7205 - val_accuracy: 1.0000 - val_loss: 0.6261 - learning_rate: 1.0000e-04\n",
            "Epoch 74/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9972 - loss: 0.7231 - val_accuracy: 1.0000 - val_loss: 0.6242 - learning_rate: 1.0000e-04\n",
            "Epoch 75/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9987 - loss: 0.7165 - val_accuracy: 1.0000 - val_loss: 0.6228 - learning_rate: 1.0000e-04\n",
            "Epoch 76/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9996 - loss: 0.7169 - val_accuracy: 1.0000 - val_loss: 0.6198 - learning_rate: 1.0000e-04\n",
            "Epoch 77/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 148ms/step - accuracy: 0.9988 - loss: 0.7234 - val_accuracy: 1.0000 - val_loss: 0.6187 - learning_rate: 1.0000e-04\n",
            "Epoch 78/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9933 - loss: 0.7391 - val_accuracy: 1.0000 - val_loss: 0.6196 - learning_rate: 1.0000e-04\n",
            "Epoch 79/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9975 - loss: 0.7172 - val_accuracy: 1.0000 - val_loss: 0.6197 - learning_rate: 1.0000e-04\n",
            "Epoch 80/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 142ms/step - accuracy: 0.9978 - loss: 0.7191 - val_accuracy: 1.0000 - val_loss: 0.6189 - learning_rate: 1.0000e-04\n",
            "Epoch 81/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9981 - loss: 0.7220 - val_accuracy: 1.0000 - val_loss: 0.6180 - learning_rate: 1.0000e-04\n",
            "Epoch 82/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9993 - loss: 0.7104 - val_accuracy: 1.0000 - val_loss: 0.6155 - learning_rate: 1.0000e-04\n",
            "Epoch 83/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9991 - loss: 0.7091 - val_accuracy: 1.0000 - val_loss: 0.6139 - learning_rate: 1.0000e-04\n",
            "Epoch 84/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 138ms/step - accuracy: 0.9963 - loss: 0.7257 - val_accuracy: 1.0000 - val_loss: 0.6139 - learning_rate: 1.0000e-04\n",
            "Epoch 85/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 137ms/step - accuracy: 0.9988 - loss: 0.7054 - val_accuracy: 1.0000 - val_loss: 0.6117 - learning_rate: 1.0000e-04\n",
            "Epoch 86/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9989 - loss: 0.7062 - val_accuracy: 1.0000 - val_loss: 0.6109 - learning_rate: 1.0000e-04\n",
            "Epoch 87/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 124ms/step - accuracy: 0.9993 - loss: 0.7007 - val_accuracy: 1.0000 - val_loss: 0.6097 - learning_rate: 1.0000e-04\n",
            "Epoch 88/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9998 - loss: 0.7078 - val_accuracy: 1.0000 - val_loss: 0.6084 - learning_rate: 1.0000e-04\n",
            "Epoch 89/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.9953 - loss: 0.7086 - val_accuracy: 1.0000 - val_loss: 0.6074 - learning_rate: 1.0000e-04\n",
            "Epoch 90/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 120ms/step - accuracy: 0.9969 - loss: 0.7065 - val_accuracy: 1.0000 - val_loss: 0.6063 - learning_rate: 1.0000e-04\n",
            "Epoch 91/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9871 - loss: 0.7425 - val_accuracy: 1.0000 - val_loss: 0.6093 - learning_rate: 1.0000e-04\n",
            "Epoch 92/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 138ms/step - accuracy: 0.9980 - loss: 0.7130 - val_accuracy: 1.0000 - val_loss: 0.6083 - learning_rate: 1.0000e-04\n",
            "Epoch 93/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 122ms/step - accuracy: 0.9986 - loss: 0.7055 - val_accuracy: 1.0000 - val_loss: 0.6084 - learning_rate: 1.0000e-04\n",
            "Epoch 94/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9996 - loss: 0.6957 - val_accuracy: 0.9976 - val_loss: 0.6095 - learning_rate: 1.0000e-04\n",
            "Epoch 95/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 128ms/step - accuracy: 0.9997 - loss: 0.7064 - val_accuracy: 0.9976 - val_loss: 0.6086 - learning_rate: 1.0000e-04\n",
            "Epoch 96/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 145ms/step - accuracy: 0.9973 - loss: 0.7010 - val_accuracy: 0.9953 - val_loss: 0.6098 - learning_rate: 1.0000e-04\n",
            "Epoch 97/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9978 - loss: 0.6985 - val_accuracy: 0.9976 - val_loss: 0.6083 - learning_rate: 1.0000e-04\n",
            "Epoch 98/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 124ms/step - accuracy: 0.9971 - loss: 0.7074 - val_accuracy: 1.0000 - val_loss: 0.6055 - learning_rate: 1.0000e-04\n",
            "Epoch 99/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9985 - loss: 0.7003 - val_accuracy: 1.0000 - val_loss: 0.6055 - learning_rate: 1.0000e-04\n",
            "Epoch 100/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9989 - loss: 0.6949 - val_accuracy: 1.0000 - val_loss: 0.6039 - learning_rate: 1.0000e-04\n",
            "Restoring model weights from the end of the best epoch: 100.\n",
            "\n",
            "--- FOLD 1 평가 (Subjects: [1, 2]) ---\n",
            "\u001b[1m35/35\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 42ms/step\n",
            "FOLD 1 Test F1-Score (Macro): 0.7589\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "       Act_1       0.94      1.00      0.97        96\n",
            "       Act_2       0.94      0.50      0.65        96\n",
            "       Act_3       1.00      0.50      0.67        96\n",
            "       Act_4       1.00      1.00      1.00        96\n",
            "       Act_5       0.96      0.97      0.96        96\n",
            "       Act_6       0.99      0.95      0.97        98\n",
            "       Act_7       0.66      0.99      0.80       100\n",
            "       Act_8       0.90      0.94      0.92       107\n",
            "       Act_9       1.00      1.00      1.00        96\n",
            "      Act_10       0.64      0.07      0.13        96\n",
            "      Act_11       0.49      0.74      0.59        96\n",
            "      Act_12       0.29      0.97      0.45        31\n",
            "\n",
            "    accuracy                           0.80      1104\n",
            "   macro avg       0.82      0.80      0.76      1104\n",
            "weighted avg       0.85      0.80      0.78      1104\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x1000 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "================= FOLD 2/5 ==================\n",
            "Train Subjects: [ 1  2  5  6  7  8  9 10]\n",
            "Test Subjects: [3, 4]\n",
            "X_train shape: (4248, 125, 15), X_test shape: (1104, 125, 15)\n",
            "Class Weights (Fold 2): {0: np.float64(0.921875), 1: np.float64(0.921875), 2: np.float64(0.921875), 3: np.float64(0.921875), 4: np.float64(0.921875), 5: np.float64(1.0442477876106195), 6: np.float64(0.9971830985915493), 7: np.float64(0.9833333333333333), 8: np.float64(0.921875), 9: np.float64(0.921875), 10: np.float64(0.921875), 11: np.float64(2.901639344262295)}\n",
            "\n",
            "--- 훈련 시작 ---\n",
            "Epoch 1/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m16s\u001b[0m 164ms/step - accuracy: 0.1844 - loss: 5.6094 - val_accuracy: 0.4141 - val_loss: 4.6949 - learning_rate: 5.0000e-04\n",
            "Epoch 2/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 120ms/step - accuracy: 0.4421 - loss: 4.3744 - val_accuracy: 0.4447 - val_loss: 3.9176 - learning_rate: 5.0000e-04\n",
            "Epoch 3/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 127ms/step - accuracy: 0.5913 - loss: 3.5654 - val_accuracy: 0.4165 - val_loss: 3.3929 - learning_rate: 5.0000e-04\n",
            "Epoch 4/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.7389 - loss: 2.9220 - val_accuracy: 0.4094 - val_loss: 3.1237 - learning_rate: 5.0000e-04\n",
            "Epoch 5/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 120ms/step - accuracy: 0.8070 - loss: 2.4879 - val_accuracy: 0.6282 - val_loss: 2.4389 - learning_rate: 5.0000e-04\n",
            "Epoch 6/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.8831 - loss: 2.1558 - val_accuracy: 0.5365 - val_loss: 2.2760 - learning_rate: 5.0000e-04\n",
            "Epoch 7/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 154ms/step - accuracy: 0.9319 - loss: 1.8893 - val_accuracy: 0.8000 - val_loss: 1.8133 - learning_rate: 5.0000e-04\n",
            "Epoch 8/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 120ms/step - accuracy: 0.9616 - loss: 1.6810 - val_accuracy: 0.7388 - val_loss: 2.0628 - learning_rate: 5.0000e-04\n",
            "Epoch 9/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 151ms/step - accuracy: 0.9508 - loss: 1.5701 - val_accuracy: 0.9576 - val_loss: 1.3496 - learning_rate: 5.0000e-04\n",
            "Epoch 10/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9756 - loss: 1.4326 - val_accuracy: 0.7200 - val_loss: 1.8440 - learning_rate: 5.0000e-04\n",
            "Epoch 11/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9667 - loss: 1.3543 - val_accuracy: 0.8424 - val_loss: 1.3679 - learning_rate: 5.0000e-04\n",
            "Epoch 12/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9762 - loss: 1.2674 - val_accuracy: 0.9976 - val_loss: 1.0568 - learning_rate: 5.0000e-04\n",
            "Epoch 13/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 132ms/step - accuracy: 0.9750 - loss: 1.2274 - val_accuracy: 0.9835 - val_loss: 1.0215 - learning_rate: 5.0000e-04\n",
            "Epoch 14/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 122ms/step - accuracy: 0.9914 - loss: 1.1274 - val_accuracy: 0.9224 - val_loss: 1.1324 - learning_rate: 5.0000e-04\n",
            "Epoch 15/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9860 - loss: 1.0907 - val_accuracy: 0.8800 - val_loss: 1.1441 - learning_rate: 5.0000e-04\n",
            "Epoch 16/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 130ms/step - accuracy: 0.9835 - loss: 1.0810 - val_accuracy: 0.9765 - val_loss: 0.9568 - learning_rate: 5.0000e-04\n",
            "Epoch 17/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 123ms/step - accuracy: 0.9868 - loss: 1.0383 - val_accuracy: 0.9882 - val_loss: 0.8875 - learning_rate: 5.0000e-04\n",
            "Epoch 18/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9799 - loss: 1.0195 - val_accuracy: 0.8894 - val_loss: 1.0236 - learning_rate: 5.0000e-04\n",
            "Epoch 19/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9732 - loss: 1.0286 - val_accuracy: 0.9953 - val_loss: 0.8464 - learning_rate: 5.0000e-04\n",
            "Epoch 20/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 127ms/step - accuracy: 0.9880 - loss: 0.9700 - val_accuracy: 0.9953 - val_loss: 0.8137 - learning_rate: 5.0000e-04\n",
            "Epoch 21/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 163ms/step - accuracy: 0.9847 - loss: 0.9511 - val_accuracy: 0.9741 - val_loss: 0.8632 - learning_rate: 5.0000e-04\n",
            "Epoch 22/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 139ms/step - accuracy: 0.9775 - loss: 0.9812 - val_accuracy: 0.9976 - val_loss: 0.7981 - learning_rate: 5.0000e-04\n",
            "Epoch 23/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 144ms/step - accuracy: 0.9865 - loss: 0.9318 - val_accuracy: 0.8965 - val_loss: 0.9343 - learning_rate: 5.0000e-04\n",
            "Epoch 24/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9645 - loss: 0.9857 - val_accuracy: 0.9929 - val_loss: 0.8048 - learning_rate: 5.0000e-04\n",
            "Epoch 25/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9753 - loss: 0.9626 - val_accuracy: 0.9976 - val_loss: 0.7925 - learning_rate: 5.0000e-04\n",
            "Epoch 26/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 157ms/step - accuracy: 0.9841 - loss: 0.9389 - val_accuracy: 1.0000 - val_loss: 0.7737 - learning_rate: 5.0000e-04\n",
            "Epoch 27/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 146ms/step - accuracy: 0.9943 - loss: 0.8970 - val_accuracy: 1.0000 - val_loss: 0.7530 - learning_rate: 5.0000e-04\n",
            "Epoch 28/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 123ms/step - accuracy: 0.9925 - loss: 0.8791 - val_accuracy: 1.0000 - val_loss: 0.7418 - learning_rate: 5.0000e-04\n",
            "Epoch 29/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 157ms/step - accuracy: 0.9918 - loss: 0.8691 - val_accuracy: 1.0000 - val_loss: 0.7266 - learning_rate: 5.0000e-04\n",
            "Epoch 30/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9766 - loss: 0.8955 - val_accuracy: 0.9953 - val_loss: 0.7847 - learning_rate: 5.0000e-04\n",
            "Epoch 31/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9806 - loss: 0.9093 - val_accuracy: 0.9953 - val_loss: 0.7658 - learning_rate: 5.0000e-04\n",
            "Epoch 32/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9850 - loss: 0.8747 - val_accuracy: 0.9365 - val_loss: 0.9162 - learning_rate: 5.0000e-04\n",
            "Epoch 33/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 121ms/step - accuracy: 0.9799 - loss: 0.8908 - val_accuracy: 0.9953 - val_loss: 0.7490 - learning_rate: 5.0000e-04\n",
            "Epoch 34/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9925 - loss: 0.8519 - val_accuracy: 1.0000 - val_loss: 0.7224 - learning_rate: 5.0000e-04\n",
            "Epoch 35/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9931 - loss: 0.8408 - val_accuracy: 1.0000 - val_loss: 0.7109 - learning_rate: 5.0000e-04\n",
            "Epoch 36/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 123ms/step - accuracy: 0.9895 - loss: 0.8380 - val_accuracy: 0.9976 - val_loss: 0.7123 - learning_rate: 5.0000e-04\n",
            "Epoch 37/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9878 - loss: 0.8500 - val_accuracy: 1.0000 - val_loss: 0.7028 - learning_rate: 5.0000e-04\n",
            "Epoch 38/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 128ms/step - accuracy: 0.9832 - loss: 0.8464 - val_accuracy: 0.9906 - val_loss: 0.7196 - learning_rate: 5.0000e-04\n",
            "Epoch 39/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 146ms/step - accuracy: 0.9905 - loss: 0.8307 - val_accuracy: 0.9953 - val_loss: 0.7079 - learning_rate: 5.0000e-04\n",
            "Epoch 40/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9831 - loss: 0.8374 - val_accuracy: 0.9976 - val_loss: 0.7064 - learning_rate: 5.0000e-04\n",
            "Epoch 41/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9948 - loss: 0.8154 - val_accuracy: 0.9953 - val_loss: 0.7004 - learning_rate: 5.0000e-04\n",
            "Epoch 42/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 146ms/step - accuracy: 0.9827 - loss: 0.8379 - val_accuracy: 0.9976 - val_loss: 0.7156 - learning_rate: 5.0000e-04\n",
            "Epoch 43/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9857 - loss: 0.8380 - val_accuracy: 0.9929 - val_loss: 0.7235 - learning_rate: 5.0000e-04\n",
            "Epoch 44/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 122ms/step - accuracy: 0.9953 - loss: 0.8138 - val_accuracy: 1.0000 - val_loss: 0.6902 - learning_rate: 5.0000e-04\n",
            "Epoch 45/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9971 - loss: 0.7837 - val_accuracy: 1.0000 - val_loss: 0.6775 - learning_rate: 5.0000e-04\n",
            "Epoch 46/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9969 - loss: 0.7800 - val_accuracy: 0.9976 - val_loss: 0.6705 - learning_rate: 5.0000e-04\n",
            "Epoch 47/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 122ms/step - accuracy: 0.9907 - loss: 0.7946 - val_accuracy: 1.0000 - val_loss: 0.6685 - learning_rate: 5.0000e-04\n",
            "Epoch 48/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 138ms/step - accuracy: 0.9899 - loss: 0.7999 - val_accuracy: 1.0000 - val_loss: 0.6642 - learning_rate: 5.0000e-04\n",
            "Epoch 49/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 157ms/step - accuracy: 0.9785 - loss: 0.8241 - val_accuracy: 0.9976 - val_loss: 0.6789 - learning_rate: 5.0000e-04\n",
            "Epoch 50/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 128ms/step - accuracy: 0.9913 - loss: 0.7930 - val_accuracy: 0.9929 - val_loss: 0.6759 - learning_rate: 5.0000e-04\n",
            "Epoch 51/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 125ms/step - accuracy: 0.9856 - loss: 0.7980 - val_accuracy: 0.8071 - val_loss: 1.5136 - learning_rate: 5.0000e-04\n",
            "Epoch 52/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 145ms/step - accuracy: 0.9719 - loss: 0.8696 - val_accuracy: 0.9953 - val_loss: 0.7059 - learning_rate: 5.0000e-04\n",
            "Epoch 53/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 165ms/step - accuracy: 0.9721 - loss: 0.8662 - val_accuracy: 0.9929 - val_loss: 0.7088 - learning_rate: 5.0000e-04\n",
            "Epoch 54/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 134ms/step - accuracy: 0.9887 - loss: 0.8160 - val_accuracy: 1.0000 - val_loss: 0.6787 - learning_rate: 5.0000e-04\n",
            "Epoch 55/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 159ms/step - accuracy: 0.9909 - loss: 0.7918 - val_accuracy: 1.0000 - val_loss: 0.6755 - learning_rate: 5.0000e-04\n",
            "Epoch 56/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - accuracy: 0.9869 - loss: 0.8055\n",
            "Epoch 56: ReduceLROnPlateau reducing learning rate to 0.00010000000474974513.\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 155ms/step - accuracy: 0.9868 - loss: 0.8055 - val_accuracy: 0.9976 - val_loss: 0.6833 - learning_rate: 5.0000e-04\n",
            "Epoch 57/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9924 - loss: 0.7958 - val_accuracy: 1.0000 - val_loss: 0.6758 - learning_rate: 1.0000e-04\n",
            "Epoch 58/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9942 - loss: 0.7796 - val_accuracy: 1.0000 - val_loss: 0.6723 - learning_rate: 1.0000e-04\n",
            "Epoch 59/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9976 - loss: 0.7755 - val_accuracy: 1.0000 - val_loss: 0.6690 - learning_rate: 1.0000e-04\n",
            "Epoch 60/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9976 - loss: 0.7677 - val_accuracy: 1.0000 - val_loss: 0.6659 - learning_rate: 1.0000e-04\n",
            "Epoch 61/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 147ms/step - accuracy: 0.9978 - loss: 0.7568 - val_accuracy: 1.0000 - val_loss: 0.6624 - learning_rate: 1.0000e-04\n",
            "Epoch 62/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9964 - loss: 0.7654 - val_accuracy: 1.0000 - val_loss: 0.6597 - learning_rate: 1.0000e-04\n",
            "Epoch 63/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m14s\u001b[0m 199ms/step - accuracy: 0.9960 - loss: 0.7657 - val_accuracy: 1.0000 - val_loss: 0.6591 - learning_rate: 1.0000e-04\n",
            "Epoch 64/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9946 - loss: 0.7593 - val_accuracy: 1.0000 - val_loss: 0.6562 - learning_rate: 1.0000e-04\n",
            "Epoch 65/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 121ms/step - accuracy: 0.9960 - loss: 0.7547 - val_accuracy: 1.0000 - val_loss: 0.6534 - learning_rate: 1.0000e-04\n",
            "Epoch 66/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9951 - loss: 0.7589 - val_accuracy: 0.9976 - val_loss: 0.6552 - learning_rate: 1.0000e-04\n",
            "Epoch 67/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 141ms/step - accuracy: 0.9970 - loss: 0.7526 - val_accuracy: 1.0000 - val_loss: 0.6487 - learning_rate: 1.0000e-04\n",
            "Epoch 68/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 127ms/step - accuracy: 0.9959 - loss: 0.7526 - val_accuracy: 1.0000 - val_loss: 0.6472 - learning_rate: 1.0000e-04\n",
            "Epoch 69/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9968 - loss: 0.7523 - val_accuracy: 1.0000 - val_loss: 0.6443 - learning_rate: 1.0000e-04\n",
            "Epoch 70/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9943 - loss: 0.7495 - val_accuracy: 1.0000 - val_loss: 0.6434 - learning_rate: 1.0000e-04\n",
            "Epoch 71/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9988 - loss: 0.7418 - val_accuracy: 1.0000 - val_loss: 0.6424 - learning_rate: 1.0000e-04\n",
            "Epoch 72/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 151ms/step - accuracy: 0.9980 - loss: 0.7409 - val_accuracy: 1.0000 - val_loss: 0.6398 - learning_rate: 1.0000e-04\n",
            "Epoch 73/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9998 - loss: 0.7339 - val_accuracy: 1.0000 - val_loss: 0.6368 - learning_rate: 1.0000e-04\n",
            "Epoch 74/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 143ms/step - accuracy: 0.9984 - loss: 0.7378 - val_accuracy: 1.0000 - val_loss: 0.6352 - learning_rate: 1.0000e-04\n",
            "Epoch 75/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9977 - loss: 0.7329 - val_accuracy: 1.0000 - val_loss: 0.6327 - learning_rate: 1.0000e-04\n",
            "Epoch 76/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 125ms/step - accuracy: 0.9905 - loss: 0.7546 - val_accuracy: 0.9976 - val_loss: 0.6358 - learning_rate: 1.0000e-04\n",
            "Epoch 77/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 122ms/step - accuracy: 0.9964 - loss: 0.7381 - val_accuracy: 1.0000 - val_loss: 0.6346 - learning_rate: 1.0000e-04\n",
            "Epoch 78/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9919 - loss: 0.7517 - val_accuracy: 1.0000 - val_loss: 0.6351 - learning_rate: 1.0000e-04\n",
            "Epoch 79/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9990 - loss: 0.7343 - val_accuracy: 1.0000 - val_loss: 0.6317 - learning_rate: 1.0000e-04\n",
            "Epoch 80/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 121ms/step - accuracy: 0.9983 - loss: 0.7299 - val_accuracy: 1.0000 - val_loss: 0.6299 - learning_rate: 1.0000e-04\n",
            "Epoch 81/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9978 - loss: 0.7387 - val_accuracy: 1.0000 - val_loss: 0.6286 - learning_rate: 1.0000e-04\n",
            "Epoch 82/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 142ms/step - accuracy: 0.9950 - loss: 0.7362 - val_accuracy: 1.0000 - val_loss: 0.6272 - learning_rate: 1.0000e-04\n",
            "Epoch 83/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9990 - loss: 0.7233 - val_accuracy: 1.0000 - val_loss: 0.6268 - learning_rate: 1.0000e-04\n",
            "Epoch 84/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 152ms/step - accuracy: 0.9963 - loss: 0.7254 - val_accuracy: 1.0000 - val_loss: 0.6258 - learning_rate: 1.0000e-04\n",
            "Epoch 85/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 146ms/step - accuracy: 0.9987 - loss: 0.7261 - val_accuracy: 0.9976 - val_loss: 0.6274 - learning_rate: 1.0000e-04\n",
            "Epoch 86/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9968 - loss: 0.7267 - val_accuracy: 1.0000 - val_loss: 0.6226 - learning_rate: 1.0000e-04\n",
            "Epoch 87/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9997 - loss: 0.7223 - val_accuracy: 1.0000 - val_loss: 0.6207 - learning_rate: 1.0000e-04\n",
            "Epoch 88/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9991 - loss: 0.7168 - val_accuracy: 1.0000 - val_loss: 0.6193 - learning_rate: 1.0000e-04\n",
            "Epoch 89/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9983 - loss: 0.7269 - val_accuracy: 1.0000 - val_loss: 0.6191 - learning_rate: 1.0000e-04\n",
            "Epoch 90/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9971 - loss: 0.7130 - val_accuracy: 1.0000 - val_loss: 0.6167 - learning_rate: 1.0000e-04\n",
            "Epoch 91/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 126ms/step - accuracy: 0.9982 - loss: 0.7097 - val_accuracy: 1.0000 - val_loss: 0.6149 - learning_rate: 1.0000e-04\n",
            "Epoch 92/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9943 - loss: 0.7225 - val_accuracy: 0.9953 - val_loss: 0.6215 - learning_rate: 1.0000e-04\n",
            "Epoch 93/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 153ms/step - accuracy: 0.9970 - loss: 0.7131 - val_accuracy: 1.0000 - val_loss: 0.6147 - learning_rate: 1.0000e-04\n",
            "Epoch 94/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 122ms/step - accuracy: 0.9986 - loss: 0.7178 - val_accuracy: 1.0000 - val_loss: 0.6132 - learning_rate: 1.0000e-04\n",
            "Epoch 95/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9965 - loss: 0.7214 - val_accuracy: 1.0000 - val_loss: 0.6127 - learning_rate: 1.0000e-04\n",
            "Epoch 96/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 123ms/step - accuracy: 0.9986 - loss: 0.7126 - val_accuracy: 1.0000 - val_loss: 0.6109 - learning_rate: 1.0000e-04\n",
            "Epoch 97/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9964 - loss: 0.7140 - val_accuracy: 1.0000 - val_loss: 0.6113 - learning_rate: 1.0000e-04\n",
            "Epoch 98/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 157ms/step - accuracy: 0.9934 - loss: 0.7274 - val_accuracy: 1.0000 - val_loss: 0.6105 - learning_rate: 1.0000e-04\n",
            "Epoch 99/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 128ms/step - accuracy: 0.9984 - loss: 0.7112 - val_accuracy: 1.0000 - val_loss: 0.6105 - learning_rate: 1.0000e-04\n",
            "Epoch 100/100\n",
            "\u001b[1m60/60\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 135ms/step - accuracy: 0.9974 - loss: 0.7109 - val_accuracy: 1.0000 - val_loss: 0.6094 - learning_rate: 1.0000e-04\n",
            "Restoring model weights from the end of the best epoch: 100.\n",
            "\n",
            "--- FOLD 2 평가 (Subjects: [3, 4]) ---\n",
            "\u001b[1m35/35\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 35ms/step\n",
            "FOLD 2 Test F1-Score (Macro): 0.8354\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "       Act_1       1.00      1.00      1.00        96\n",
            "       Act_2       0.00      0.00      0.00        96\n",
            "       Act_3       1.00      1.00      1.00        96\n",
            "       Act_4       1.00      1.00      1.00        96\n",
            "       Act_5       1.00      0.98      0.99        96\n",
            "       Act_6       1.00      1.00      1.00       103\n",
            "       Act_7       0.68      1.00      0.81       104\n",
            "       Act_8       0.67      0.99      0.80        99\n",
            "       Act_9       0.99      1.00      0.99        96\n",
            "      Act_10       0.98      0.48      0.64        96\n",
            "      Act_11       0.65      0.99      0.79        96\n",
            "      Act_12       1.00      1.00      1.00        30\n",
            "\n",
            "    accuracy                           0.86      1104\n",
            "   macro avg       0.83      0.87      0.84      1104\n",
            "weighted avg       0.82      0.86      0.83      1104\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x1000 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "================= FOLD 3/5 ==================\n",
            "Train Subjects: [ 1  2  3  4  7  8  9 10]\n",
            "Test Subjects: [5, 6]\n",
            "X_train shape: (4322, 125, 15), X_test shape: (1030, 125, 15)\n",
            "Class Weights (Fold 3): {0: np.float64(0.9379340277777778), 1: np.float64(0.9379340277777778), 2: np.float64(0.9379340277777778), 3: np.float64(0.9379340277777778), 4: np.float64(0.9379340277777778), 5: np.float64(0.9867579908675799), 6: np.float64(0.9428446771378709), 7: np.float64(0.9453193350831146), 8: np.float64(0.9379340277777778), 9: np.float64(0.9379340277777778), 10: np.float64(0.9379340277777778), 11: np.float64(2.952185792349727)}\n",
            "\n",
            "--- 훈련 시작 ---\n",
            "Epoch 1/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m18s\u001b[0m 165ms/step - accuracy: 0.1863 - loss: 5.6347 - val_accuracy: 0.4573 - val_loss: 4.7098 - learning_rate: 5.0000e-04\n",
            "Epoch 2/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.4407 - loss: 4.3424 - val_accuracy: 0.5473 - val_loss: 3.8840 - learning_rate: 5.0000e-04\n",
            "Epoch 3/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 123ms/step - accuracy: 0.6460 - loss: 3.4893 - val_accuracy: 0.6467 - val_loss: 3.3103 - learning_rate: 5.0000e-04\n",
            "Epoch 4/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 143ms/step - accuracy: 0.7753 - loss: 2.8413 - val_accuracy: 0.5658 - val_loss: 3.0612 - learning_rate: 5.0000e-04\n",
            "Epoch 5/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 153ms/step - accuracy: 0.8648 - loss: 2.3995 - val_accuracy: 0.5543 - val_loss: 2.8034 - learning_rate: 5.0000e-04\n",
            "Epoch 6/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 127ms/step - accuracy: 0.9031 - loss: 2.0897 - val_accuracy: 0.5358 - val_loss: 2.3580 - learning_rate: 5.0000e-04\n",
            "Epoch 7/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 125ms/step - accuracy: 0.9405 - loss: 1.8312 - val_accuracy: 0.5104 - val_loss: 2.4458 - learning_rate: 5.0000e-04\n",
            "Epoch 8/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9581 - loss: 1.6379 - val_accuracy: 0.6397 - val_loss: 2.1535 - learning_rate: 5.0000e-04\n",
            "Epoch 9/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 142ms/step - accuracy: 0.9737 - loss: 1.5020 - val_accuracy: 0.8314 - val_loss: 1.5899 - learning_rate: 5.0000e-04\n",
            "Epoch 10/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 131ms/step - accuracy: 0.9809 - loss: 1.3790 - val_accuracy: 0.7275 - val_loss: 1.7489 - learning_rate: 5.0000e-04\n",
            "Epoch 11/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 157ms/step - accuracy: 0.9263 - loss: 1.4260 - val_accuracy: 0.9630 - val_loss: 1.1715 - learning_rate: 5.0000e-04\n",
            "Epoch 12/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 154ms/step - accuracy: 0.9879 - loss: 1.2358 - val_accuracy: 0.9977 - val_loss: 1.0351 - learning_rate: 5.0000e-04\n",
            "Epoch 13/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 128ms/step - accuracy: 0.9723 - loss: 1.2136 - val_accuracy: 0.9908 - val_loss: 1.0037 - learning_rate: 5.0000e-04\n",
            "Epoch 14/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 154ms/step - accuracy: 0.9778 - loss: 1.1320 - val_accuracy: 0.9861 - val_loss: 0.9601 - learning_rate: 5.0000e-04\n",
            "Epoch 15/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 156ms/step - accuracy: 0.9864 - loss: 1.0819 - val_accuracy: 0.9954 - val_loss: 0.9075 - learning_rate: 5.0000e-04\n",
            "Epoch 16/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 133ms/step - accuracy: 0.9774 - loss: 1.0683 - val_accuracy: 0.7945 - val_loss: 1.5531 - learning_rate: 5.0000e-04\n",
            "Epoch 17/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 148ms/step - accuracy: 0.9766 - loss: 1.0450 - val_accuracy: 0.9977 - val_loss: 0.8722 - learning_rate: 5.0000e-04\n",
            "Epoch 18/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 158ms/step - accuracy: 0.9720 - loss: 1.0407 - val_accuracy: 0.9977 - val_loss: 0.8483 - learning_rate: 5.0000e-04\n",
            "Epoch 19/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 130ms/step - accuracy: 0.9888 - loss: 0.9685 - val_accuracy: 0.9838 - val_loss: 0.8449 - learning_rate: 5.0000e-04\n",
            "Epoch 20/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9851 - loss: 0.9673 - val_accuracy: 0.9931 - val_loss: 0.8052 - learning_rate: 5.0000e-04\n",
            "Epoch 21/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9850 - loss: 0.9277 - val_accuracy: 0.9908 - val_loss: 0.7983 - learning_rate: 5.0000e-04\n",
            "Epoch 22/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9937 - loss: 0.8985 - val_accuracy: 0.9977 - val_loss: 0.7741 - learning_rate: 5.0000e-04\n",
            "Epoch 23/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9615 - loss: 0.9851 - val_accuracy: 0.9931 - val_loss: 0.8066 - learning_rate: 5.0000e-04\n",
            "Epoch 24/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 156ms/step - accuracy: 0.9856 - loss: 0.9273 - val_accuracy: 1.0000 - val_loss: 0.7699 - learning_rate: 5.0000e-04\n",
            "Epoch 25/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9889 - loss: 0.8938 - val_accuracy: 0.9977 - val_loss: 0.7551 - learning_rate: 5.0000e-04\n",
            "Epoch 26/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9919 - loss: 0.8784 - val_accuracy: 0.9954 - val_loss: 0.7424 - learning_rate: 5.0000e-04\n",
            "Epoch 27/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 145ms/step - accuracy: 0.9897 - loss: 0.8684 - val_accuracy: 0.8661 - val_loss: 1.2319 - learning_rate: 5.0000e-04\n",
            "Epoch 28/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 134ms/step - accuracy: 0.9667 - loss: 0.9384 - val_accuracy: 0.8822 - val_loss: 0.9827 - learning_rate: 5.0000e-04\n",
            "Epoch 29/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 156ms/step - accuracy: 0.9741 - loss: 0.9385 - val_accuracy: 1.0000 - val_loss: 0.7586 - learning_rate: 5.0000e-04\n",
            "Epoch 30/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 154ms/step - accuracy: 0.9917 - loss: 0.8698 - val_accuracy: 1.0000 - val_loss: 0.7338 - learning_rate: 5.0000e-04\n",
            "Epoch 31/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 126ms/step - accuracy: 0.9940 - loss: 0.8517 - val_accuracy: 1.0000 - val_loss: 0.7242 - learning_rate: 5.0000e-04\n",
            "Epoch 32/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9871 - loss: 0.8602 - val_accuracy: 1.0000 - val_loss: 0.7179 - learning_rate: 5.0000e-04\n",
            "Epoch 33/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 157ms/step - accuracy: 0.9895 - loss: 0.8408 - val_accuracy: 0.9908 - val_loss: 0.7576 - learning_rate: 5.0000e-04\n",
            "Epoch 34/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9781 - loss: 0.8834 - val_accuracy: 0.9954 - val_loss: 0.7286 - learning_rate: 5.0000e-04\n",
            "Epoch 35/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9880 - loss: 0.8398 - val_accuracy: 0.9885 - val_loss: 0.7557 - learning_rate: 5.0000e-04\n",
            "Epoch 36/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 141ms/step - accuracy: 0.9811 - loss: 0.8764 - val_accuracy: 0.9954 - val_loss: 0.7401 - learning_rate: 5.0000e-04\n",
            "Epoch 37/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 140ms/step - accuracy: 0.9895 - loss: 0.8421 - val_accuracy: 1.0000 - val_loss: 0.7078 - learning_rate: 5.0000e-04\n",
            "Epoch 38/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 154ms/step - accuracy: 0.9947 - loss: 0.8128 - val_accuracy: 1.0000 - val_loss: 0.6968 - learning_rate: 5.0000e-04\n",
            "Epoch 39/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 154ms/step - accuracy: 0.9950 - loss: 0.8083 - val_accuracy: 1.0000 - val_loss: 0.6891 - learning_rate: 5.0000e-04\n",
            "Epoch 40/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.9928 - loss: 0.8100 - val_accuracy: 1.0000 - val_loss: 0.6834 - learning_rate: 5.0000e-04\n",
            "Epoch 41/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 133ms/step - accuracy: 0.9789 - loss: 0.8368 - val_accuracy: 1.0000 - val_loss: 0.6933 - learning_rate: 5.0000e-04\n",
            "Epoch 42/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9957 - loss: 0.7997 - val_accuracy: 1.0000 - val_loss: 0.6866 - learning_rate: 5.0000e-04\n",
            "Epoch 43/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 124ms/step - accuracy: 0.9954 - loss: 0.7904 - val_accuracy: 1.0000 - val_loss: 0.6756 - learning_rate: 5.0000e-04\n",
            "Epoch 44/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9927 - loss: 0.7803 - val_accuracy: 0.9977 - val_loss: 0.6673 - learning_rate: 5.0000e-04\n",
            "Epoch 45/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9961 - loss: 0.7761 - val_accuracy: 0.9931 - val_loss: 0.6843 - learning_rate: 5.0000e-04\n",
            "Epoch 46/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 124ms/step - accuracy: 0.9819 - loss: 0.8098 - val_accuracy: 0.9330 - val_loss: 0.8227 - learning_rate: 5.0000e-04\n",
            "Epoch 47/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 146ms/step - accuracy: 0.9914 - loss: 0.8098 - val_accuracy: 0.9954 - val_loss: 0.7056 - learning_rate: 5.0000e-04\n",
            "Epoch 48/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9783 - loss: 0.8360 - val_accuracy: 1.0000 - val_loss: 0.6829 - learning_rate: 5.0000e-04\n",
            "Epoch 49/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 130ms/step - accuracy: 0.9956 - loss: 0.7810 - val_accuracy: 1.0000 - val_loss: 0.6709 - learning_rate: 5.0000e-04\n",
            "Epoch 50/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 144ms/step - accuracy: 0.9940 - loss: 0.7811 - val_accuracy: 1.0000 - val_loss: 0.6618 - learning_rate: 5.0000e-04\n",
            "Epoch 51/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9970 - loss: 0.7668 - val_accuracy: 1.0000 - val_loss: 0.6532 - learning_rate: 5.0000e-04\n",
            "Epoch 52/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.9954 - loss: 0.7630 - val_accuracy: 0.9400 - val_loss: 0.8221 - learning_rate: 5.0000e-04\n",
            "Epoch 53/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9681 - loss: 0.8411 - val_accuracy: 1.0000 - val_loss: 0.6790 - learning_rate: 5.0000e-04\n",
            "Epoch 54/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.9887 - loss: 0.7886 - val_accuracy: 1.0000 - val_loss: 0.6660 - learning_rate: 5.0000e-04\n",
            "Epoch 55/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 133ms/step - accuracy: 0.9879 - loss: 0.7933 - val_accuracy: 0.9977 - val_loss: 0.6605 - learning_rate: 5.0000e-04\n",
            "Epoch 56/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 160ms/step - accuracy: 0.9886 - loss: 0.7868 - val_accuracy: 0.9954 - val_loss: 0.6847 - learning_rate: 5.0000e-04\n",
            "Epoch 57/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 157ms/step - accuracy: 0.9886 - loss: 0.7981 - val_accuracy: 0.8730 - val_loss: 1.1649 - learning_rate: 5.0000e-04\n",
            "Epoch 58/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9414 - loss: 0.9241 - val_accuracy: 0.9515 - val_loss: 0.8204 - learning_rate: 5.0000e-04\n",
            "Epoch 59/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 142ms/step - accuracy: 0.9764 - loss: 0.8473\n",
            "Epoch 59: ReduceLROnPlateau reducing learning rate to 0.00010000000474974513.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 147ms/step - accuracy: 0.9765 - loss: 0.8469 - val_accuracy: 0.9931 - val_loss: 0.7045 - learning_rate: 5.0000e-04\n",
            "Epoch 60/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 157ms/step - accuracy: 0.9936 - loss: 0.7989 - val_accuracy: 0.9977 - val_loss: 0.6958 - learning_rate: 1.0000e-04\n",
            "Epoch 61/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9946 - loss: 0.7859 - val_accuracy: 0.9977 - val_loss: 0.6925 - learning_rate: 1.0000e-04\n",
            "Epoch 62/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9961 - loss: 0.7838 - val_accuracy: 0.9977 - val_loss: 0.6814 - learning_rate: 1.0000e-04\n",
            "Epoch 63/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9973 - loss: 0.7757 - val_accuracy: 0.9977 - val_loss: 0.6785 - learning_rate: 1.0000e-04\n",
            "Epoch 64/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.9963 - loss: 0.7763 - val_accuracy: 0.9977 - val_loss: 0.6764 - learning_rate: 1.0000e-04\n",
            "Epoch 65/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 156ms/step - accuracy: 0.9984 - loss: 0.7744 - val_accuracy: 0.9977 - val_loss: 0.6725 - learning_rate: 1.0000e-04\n",
            "Epoch 66/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 148ms/step - accuracy: 0.9966 - loss: 0.7744 - val_accuracy: 0.9977 - val_loss: 0.6706 - learning_rate: 1.0000e-04\n",
            "Epoch 67/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 135ms/step - accuracy: 0.9948 - loss: 0.7783\n",
            "Epoch 67: ReduceLROnPlateau reducing learning rate to 2.0000000949949027e-05.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 140ms/step - accuracy: 0.9948 - loss: 0.7781 - val_accuracy: 0.9977 - val_loss: 0.6708 - learning_rate: 1.0000e-04\n",
            "Epoch 68/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9966 - loss: 0.7601 - val_accuracy: 0.9977 - val_loss: 0.6688 - learning_rate: 2.0000e-05\n",
            "Epoch 69/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 133ms/step - accuracy: 0.9981 - loss: 0.7593 - val_accuracy: 0.9977 - val_loss: 0.6680 - learning_rate: 2.0000e-05\n",
            "Epoch 70/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 142ms/step - accuracy: 0.9970 - loss: 0.7701 - val_accuracy: 0.9977 - val_loss: 0.6673 - learning_rate: 2.0000e-05\n",
            "Epoch 71/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9972 - loss: 0.7622 - val_accuracy: 0.9977 - val_loss: 0.6664 - learning_rate: 2.0000e-05\n",
            "Epoch 72/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.9973 - loss: 0.7583 - val_accuracy: 1.0000 - val_loss: 0.6655 - learning_rate: 2.0000e-05\n",
            "Epoch 73/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 132ms/step - accuracy: 0.9959 - loss: 0.7621 - val_accuracy: 1.0000 - val_loss: 0.6649 - learning_rate: 2.0000e-05\n",
            "Epoch 74/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.9966 - loss: 0.7620 - val_accuracy: 1.0000 - val_loss: 0.6642 - learning_rate: 2.0000e-05\n",
            "Epoch 75/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - accuracy: 0.9964 - loss: 0.7710\n",
            "Epoch 75: ReduceLROnPlateau reducing learning rate to 4.000000262749381e-06.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 121ms/step - accuracy: 0.9964 - loss: 0.7709 - val_accuracy: 1.0000 - val_loss: 0.6636 - learning_rate: 2.0000e-05\n",
            "Epoch 76/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9968 - loss: 0.7554 - val_accuracy: 1.0000 - val_loss: 0.6634 - learning_rate: 4.0000e-06\n",
            "Epoch 76: early stopping\n",
            "Restoring model weights from the end of the best epoch: 51.\n",
            "\n",
            "--- FOLD 3 평가 (Subjects: [5, 6]) ---\n",
            "\u001b[1m33/33\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 28ms/step\n",
            "FOLD 3 Test F1-Score (Macro): 0.8660\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "       Act_1       0.62      1.00      0.76        96\n",
            "       Act_2       1.00      0.50      0.67        96\n",
            "       Act_3       1.00      1.00      1.00        96\n",
            "       Act_4       0.99      0.89      0.93        96\n",
            "       Act_5       0.82      0.99      0.90        96\n",
            "       Act_6       1.00      1.00      1.00        77\n",
            "       Act_7       1.00      1.00      1.00        77\n",
            "       Act_8       1.00      0.73      0.84        78\n",
            "       Act_9       1.00      1.00      1.00        96\n",
            "      Act_10       0.72      0.50      0.59        96\n",
            "      Act_11       0.62      0.80      0.70        96\n",
            "      Act_12       1.00      1.00      1.00        30\n",
            "\n",
            "    accuracy                           0.86      1030\n",
            "   macro avg       0.90      0.87      0.87      1030\n",
            "weighted avg       0.88      0.86      0.85      1030\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x1000 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "================= FOLD 4/5 ==================\n",
            "Train Subjects: [ 1  2  3  4  5  6  9 10]\n",
            "Test Subjects: [7, 8]\n",
            "X_train shape: (4299, 125, 15), X_test shape: (1053, 125, 15)\n",
            "Class Weights (Fold 4): {0: np.float64(0.9329427083333334), 1: np.float64(0.9329427083333334), 2: np.float64(0.9329427083333334), 3: np.float64(0.9329427083333334), 4: np.float64(0.9329427083333334), 5: np.float64(0.9923822714681441), 6: np.float64(0.9708672086720868), 7: np.float64(0.9553333333333334), 8: np.float64(0.9329427083333334), 9: np.float64(0.9329427083333334), 10: np.float64(0.9329427083333334), 11: np.float64(2.9364754098360657)}\n",
            "\n",
            "--- 훈련 시작 ---\n",
            "Epoch 1/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m15s\u001b[0m 132ms/step - accuracy: 0.1821 - loss: 5.6123 - val_accuracy: 0.5140 - val_loss: 4.7554 - learning_rate: 5.0000e-04\n",
            "Epoch 2/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.4710 - loss: 4.3702 - val_accuracy: 0.6209 - val_loss: 3.8778 - learning_rate: 5.0000e-04\n",
            "Epoch 3/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.6510 - loss: 3.4713 - val_accuracy: 0.5651 - val_loss: 3.2631 - learning_rate: 5.0000e-04\n",
            "Epoch 4/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 121ms/step - accuracy: 0.7789 - loss: 2.8461 - val_accuracy: 0.5558 - val_loss: 3.1287 - learning_rate: 5.0000e-04\n",
            "Epoch 5/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.8432 - loss: 2.4164 - val_accuracy: 0.6000 - val_loss: 2.7550 - learning_rate: 5.0000e-04\n",
            "Epoch 6/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 137ms/step - accuracy: 0.9223 - loss: 2.0753 - val_accuracy: 0.6581 - val_loss: 2.3965 - learning_rate: 5.0000e-04\n",
            "Epoch 7/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 133ms/step - accuracy: 0.9336 - loss: 1.8593 - val_accuracy: 0.8837 - val_loss: 1.8051 - learning_rate: 5.0000e-04\n",
            "Epoch 8/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9662 - loss: 1.6794 - val_accuracy: 0.9465 - val_loss: 1.5704 - learning_rate: 5.0000e-04\n",
            "Epoch 9/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9766 - loss: 1.5201 - val_accuracy: 0.8907 - val_loss: 1.4628 - learning_rate: 5.0000e-04\n",
            "Epoch 10/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9772 - loss: 1.4023 - val_accuracy: 0.8674 - val_loss: 1.4311 - learning_rate: 5.0000e-04\n",
            "Epoch 11/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.9761 - loss: 1.3115 - val_accuracy: 0.8326 - val_loss: 1.3929 - learning_rate: 5.0000e-04\n",
            "Epoch 12/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9386 - loss: 1.3295 - val_accuracy: 0.9814 - val_loss: 1.1062 - learning_rate: 5.0000e-04\n",
            "Epoch 13/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9599 - loss: 1.2530 - val_accuracy: 0.9953 - val_loss: 1.0147 - learning_rate: 5.0000e-04\n",
            "Epoch 14/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 124ms/step - accuracy: 0.9918 - loss: 1.1380 - val_accuracy: 0.9977 - val_loss: 0.9558 - learning_rate: 5.0000e-04\n",
            "Epoch 15/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 121ms/step - accuracy: 0.9838 - loss: 1.1039 - val_accuracy: 0.9953 - val_loss: 0.9259 - learning_rate: 5.0000e-04\n",
            "Epoch 16/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.9665 - loss: 1.1141 - val_accuracy: 0.6023 - val_loss: 1.8489 - learning_rate: 5.0000e-04\n",
            "Epoch 17/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 133ms/step - accuracy: 0.9798 - loss: 1.0369 - val_accuracy: 1.0000 - val_loss: 0.8697 - learning_rate: 5.0000e-04\n",
            "Epoch 18/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 138ms/step - accuracy: 0.9787 - loss: 1.0109 - val_accuracy: 0.9930 - val_loss: 0.8560 - learning_rate: 5.0000e-04\n",
            "Epoch 19/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9849 - loss: 0.9904 - val_accuracy: 0.9837 - val_loss: 0.8558 - learning_rate: 5.0000e-04\n",
            "Epoch 20/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9824 - loss: 0.9779 - val_accuracy: 0.8930 - val_loss: 1.1249 - learning_rate: 5.0000e-04\n",
            "Epoch 21/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9756 - loss: 0.9802 - val_accuracy: 0.9651 - val_loss: 0.9435 - learning_rate: 5.0000e-04\n",
            "Epoch 22/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 136ms/step - accuracy: 0.9809 - loss: 0.9737 - val_accuracy: 0.9767 - val_loss: 0.8820 - learning_rate: 5.0000e-04\n",
            "Epoch 23/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 120ms/step - accuracy: 0.9767 - loss: 0.9595 - val_accuracy: 0.9977 - val_loss: 0.8066 - learning_rate: 5.0000e-04\n",
            "Epoch 24/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.9901 - loss: 0.9299 - val_accuracy: 0.9953 - val_loss: 0.7915 - learning_rate: 5.0000e-04\n",
            "Epoch 25/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 128ms/step - accuracy: 0.9889 - loss: 0.8972 - val_accuracy: 0.9930 - val_loss: 0.7837 - learning_rate: 5.0000e-04\n",
            "Epoch 26/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 139ms/step - accuracy: 0.9736 - loss: 0.9345 - val_accuracy: 0.8814 - val_loss: 1.1408 - learning_rate: 5.0000e-04\n",
            "Epoch 27/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 150ms/step - accuracy: 0.9860 - loss: 0.9098 - val_accuracy: 1.0000 - val_loss: 0.7530 - learning_rate: 5.0000e-04\n",
            "Epoch 28/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 124ms/step - accuracy: 0.9927 - loss: 0.8716 - val_accuracy: 1.0000 - val_loss: 0.7395 - learning_rate: 5.0000e-04\n",
            "Epoch 29/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 148ms/step - accuracy: 0.9789 - loss: 0.8936 - val_accuracy: 0.9907 - val_loss: 0.7624 - learning_rate: 5.0000e-04\n",
            "Epoch 30/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 152ms/step - accuracy: 0.9853 - loss: 0.8872 - val_accuracy: 1.0000 - val_loss: 0.7359 - learning_rate: 5.0000e-04\n",
            "Epoch 31/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 124ms/step - accuracy: 0.9744 - loss: 0.9029 - val_accuracy: 0.9093 - val_loss: 1.0757 - learning_rate: 5.0000e-04\n",
            "Epoch 32/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9828 - loss: 0.8868 - val_accuracy: 1.0000 - val_loss: 0.7406 - learning_rate: 5.0000e-04\n",
            "Epoch 33/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 150ms/step - accuracy: 0.9862 - loss: 0.8600 - val_accuracy: 0.9977 - val_loss: 0.7376 - learning_rate: 5.0000e-04\n",
            "Epoch 34/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 123ms/step - accuracy: 0.9914 - loss: 0.8458 - val_accuracy: 1.0000 - val_loss: 0.7198 - learning_rate: 5.0000e-04\n",
            "Epoch 35/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 120ms/step - accuracy: 0.9905 - loss: 0.8317 - val_accuracy: 0.9860 - val_loss: 0.7529 - learning_rate: 5.0000e-04\n",
            "Epoch 36/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 149ms/step - accuracy: 0.9879 - loss: 0.8479 - val_accuracy: 0.9953 - val_loss: 0.7144 - learning_rate: 5.0000e-04\n",
            "Epoch 37/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 139ms/step - accuracy: 0.9727 - loss: 0.8891 - val_accuracy: 0.9953 - val_loss: 0.7336 - learning_rate: 5.0000e-04\n",
            "Epoch 38/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9659 - loss: 0.9291 - val_accuracy: 0.9256 - val_loss: 0.9022 - learning_rate: 5.0000e-04\n",
            "Epoch 39/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9844 - loss: 0.8665 - val_accuracy: 1.0000 - val_loss: 0.7289 - learning_rate: 5.0000e-04\n",
            "Epoch 40/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 134ms/step - accuracy: 0.9946 - loss: 0.8375 - val_accuracy: 1.0000 - val_loss: 0.7111 - learning_rate: 5.0000e-04\n",
            "Epoch 41/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 143ms/step - accuracy: 0.9953 - loss: 0.8154 - val_accuracy: 1.0000 - val_loss: 0.6985 - learning_rate: 5.0000e-04\n",
            "Epoch 42/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 155ms/step - accuracy: 0.9951 - loss: 0.8090 - val_accuracy: 0.9977 - val_loss: 0.6920 - learning_rate: 5.0000e-04\n",
            "Epoch 43/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9911 - loss: 0.8103 - val_accuracy: 0.9977 - val_loss: 0.6913 - learning_rate: 5.0000e-04\n",
            "Epoch 44/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 125ms/step - accuracy: 0.9758 - loss: 0.8493 - val_accuracy: 0.9767 - val_loss: 0.7973 - learning_rate: 5.0000e-04\n",
            "Epoch 45/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9509 - loss: 0.9459 - val_accuracy: 0.9930 - val_loss: 0.7651 - learning_rate: 5.0000e-04\n",
            "Epoch 46/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 137ms/step - accuracy: 0.9872 - loss: 0.8486 - val_accuracy: 1.0000 - val_loss: 0.7241 - learning_rate: 5.0000e-04\n",
            "Epoch 47/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 135ms/step - accuracy: 0.9883 - loss: 0.8402 - val_accuracy: 1.0000 - val_loss: 0.7078 - learning_rate: 5.0000e-04\n",
            "Epoch 48/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 152ms/step - accuracy: 0.9952 - loss: 0.8186 - val_accuracy: 1.0000 - val_loss: 0.6955 - learning_rate: 5.0000e-04\n",
            "Epoch 49/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 140ms/step - accuracy: 0.9913 - loss: 0.8072 - val_accuracy: 1.0000 - val_loss: 0.6848 - learning_rate: 5.0000e-04\n",
            "Epoch 50/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 133ms/step - accuracy: 0.9913 - loss: 0.7906 - val_accuracy: 0.9953 - val_loss: 0.6862 - learning_rate: 5.0000e-04\n",
            "Epoch 51/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 154ms/step - accuracy: 0.9788 - loss: 0.8367 - val_accuracy: 0.9930 - val_loss: 0.7260 - learning_rate: 5.0000e-04\n",
            "Epoch 52/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 140ms/step - accuracy: 0.9864 - loss: 0.8331 - val_accuracy: 0.9977 - val_loss: 0.7013 - learning_rate: 5.0000e-04\n",
            "Epoch 53/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 132ms/step - accuracy: 0.9887 - loss: 0.8165 - val_accuracy: 0.9977 - val_loss: 0.6928 - learning_rate: 5.0000e-04\n",
            "Epoch 54/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9930 - loss: 0.7948 - val_accuracy: 1.0000 - val_loss: 0.6786 - learning_rate: 5.0000e-04\n",
            "Epoch 55/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.9880 - loss: 0.8126 - val_accuracy: 0.9953 - val_loss: 0.7001 - learning_rate: 5.0000e-04\n",
            "Epoch 56/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 126ms/step - accuracy: 0.9788 - loss: 0.8393 - val_accuracy: 0.9953 - val_loss: 0.7207 - learning_rate: 5.0000e-04\n",
            "Epoch 57/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 148ms/step - accuracy: 0.9636 - loss: 0.9071 - val_accuracy: 0.9953 - val_loss: 0.7444 - learning_rate: 5.0000e-04\n",
            "Epoch 58/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9912 - loss: 0.8340 - val_accuracy: 0.9977 - val_loss: 0.7132 - learning_rate: 5.0000e-04\n",
            "Epoch 59/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 125ms/step - accuracy: 0.9555 - loss: 0.9269 - val_accuracy: 0.9907 - val_loss: 0.7581 - learning_rate: 5.0000e-04\n",
            "Epoch 60/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 123ms/step - accuracy: 0.9520 - loss: 0.9290 - val_accuracy: 0.9791 - val_loss: 0.7789 - learning_rate: 5.0000e-04\n",
            "Epoch 61/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 148ms/step - accuracy: 0.9813 - loss: 0.8670 - val_accuracy: 0.9953 - val_loss: 0.7417 - learning_rate: 5.0000e-04\n",
            "Epoch 62/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - accuracy: 0.9885 - loss: 0.8396\n",
            "Epoch 62: ReduceLROnPlateau reducing learning rate to 0.00010000000474974513.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 156ms/step - accuracy: 0.9885 - loss: 0.8395 - val_accuracy: 0.9953 - val_loss: 0.7296 - learning_rate: 5.0000e-04\n",
            "Epoch 63/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 124ms/step - accuracy: 0.9922 - loss: 0.8161 - val_accuracy: 0.9953 - val_loss: 0.7215 - learning_rate: 1.0000e-04\n",
            "Epoch 64/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 150ms/step - accuracy: 0.9934 - loss: 0.8146 - val_accuracy: 0.9953 - val_loss: 0.7182 - learning_rate: 1.0000e-04\n",
            "Epoch 65/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9949 - loss: 0.8074 - val_accuracy: 0.9953 - val_loss: 0.7138 - learning_rate: 1.0000e-04\n",
            "Epoch 66/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9961 - loss: 0.7978 - val_accuracy: 0.9977 - val_loss: 0.7037 - learning_rate: 1.0000e-04\n",
            "Epoch 67/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9955 - loss: 0.7991 - val_accuracy: 0.9977 - val_loss: 0.7015 - learning_rate: 1.0000e-04\n",
            "Epoch 68/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.9961 - loss: 0.7945 - val_accuracy: 0.9977 - val_loss: 0.6992 - learning_rate: 1.0000e-04\n",
            "Epoch 69/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 145ms/step - accuracy: 0.9957 - loss: 0.7942 - val_accuracy: 0.9977 - val_loss: 0.6971 - learning_rate: 1.0000e-04\n",
            "Epoch 70/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - accuracy: 0.9971 - loss: 0.7928\n",
            "Epoch 70: ReduceLROnPlateau reducing learning rate to 2.0000000949949027e-05.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9971 - loss: 0.7927 - val_accuracy: 0.9977 - val_loss: 0.6950 - learning_rate: 1.0000e-04\n",
            "Epoch 71/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m7s\u001b[0m 121ms/step - accuracy: 0.9947 - loss: 0.7843 - val_accuracy: 0.9977 - val_loss: 0.6943 - learning_rate: 2.0000e-05\n",
            "Epoch 72/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9964 - loss: 0.7870 - val_accuracy: 0.9977 - val_loss: 0.6934 - learning_rate: 2.0000e-05\n",
            "Epoch 73/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 145ms/step - accuracy: 0.9979 - loss: 0.7865 - val_accuracy: 0.9977 - val_loss: 0.6925 - learning_rate: 2.0000e-05\n",
            "Epoch 74/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 123ms/step - accuracy: 0.9966 - loss: 0.7878 - val_accuracy: 0.9977 - val_loss: 0.6919 - learning_rate: 2.0000e-05\n",
            "Epoch 75/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 138ms/step - accuracy: 0.9941 - loss: 0.7838 - val_accuracy: 1.0000 - val_loss: 0.6908 - learning_rate: 2.0000e-05\n",
            "Epoch 76/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9969 - loss: 0.7845 - val_accuracy: 0.9977 - val_loss: 0.6906 - learning_rate: 2.0000e-05\n",
            "Epoch 77/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 123ms/step - accuracy: 0.9961 - loss: 0.7814 - val_accuracy: 0.9977 - val_loss: 0.6902 - learning_rate: 2.0000e-05\n",
            "Epoch 78/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 146ms/step - accuracy: 0.9985 - loss: 0.7785\n",
            "Epoch 78: ReduceLROnPlateau reducing learning rate to 4.000000262749381e-06.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9985 - loss: 0.7785 - val_accuracy: 0.9977 - val_loss: 0.6895 - learning_rate: 2.0000e-05\n",
            "Epoch 79/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 148ms/step - accuracy: 0.9956 - loss: 0.7847 - val_accuracy: 0.9977 - val_loss: 0.6893 - learning_rate: 4.0000e-06\n",
            "Epoch 79: early stopping\n",
            "Restoring model weights from the end of the best epoch: 54.\n",
            "\n",
            "--- FOLD 4 평가 (Subjects: [7, 8]) ---\n",
            "\u001b[1m33/33\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 29ms/step\n",
            "FOLD 4 Test F1-Score (Macro): 0.9469\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "       Act_1       1.00      1.00      1.00        96\n",
            "       Act_2       0.74      1.00      0.85        96\n",
            "       Act_3       1.00      1.00      1.00        96\n",
            "       Act_4       1.00      0.83      0.91        96\n",
            "       Act_5       0.86      1.00      0.92        96\n",
            "       Act_6       1.00      1.00      1.00        81\n",
            "       Act_7       1.00      0.96      0.98        90\n",
            "       Act_8       0.93      1.00      0.97        84\n",
            "       Act_9       1.00      0.62      0.77        96\n",
            "      Act_10       0.97      1.00      0.98        96\n",
            "      Act_11       1.00      0.97      0.98        96\n",
            "      Act_12       1.00      1.00      1.00        30\n",
            "\n",
            "    accuracy                           0.94      1053\n",
            "   macro avg       0.96      0.95      0.95      1053\n",
            "weighted avg       0.96      0.94      0.94      1053\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x1000 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "================= FOLD 5/5 ==================\n",
            "Train Subjects: [1 2 3 4 5 6 7 8]\n",
            "Test Subjects: [9, 10]\n",
            "X_train shape: (4291, 125, 15), X_test shape: (1061, 125, 15)\n",
            "Class Weights (Fold 5): {0: np.float64(0.9312065972222222), 1: np.float64(0.9312065972222222), 2: np.float64(0.9312065972222222), 3: np.float64(0.9312065972222222), 4: np.float64(0.9312065972222222), 5: np.float64(0.9960538532961931), 6: np.float64(0.9638364779874213), 7: np.float64(0.9716938405797102), 8: np.float64(0.9312065972222222), 9: np.float64(0.9312065972222222), 10: np.float64(0.9312065972222222), 11: np.float64(2.9552341597796143)}\n",
            "\n",
            "--- 훈련 시작 ---\n",
            "Epoch 1/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m17s\u001b[0m 157ms/step - accuracy: 0.1674 - loss: 5.6705 - val_accuracy: 0.2558 - val_loss: 4.9589 - learning_rate: 5.0000e-04\n",
            "Epoch 2/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.4464 - loss: 4.3908 - val_accuracy: 0.3767 - val_loss: 4.1460 - learning_rate: 5.0000e-04\n",
            "Epoch 3/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 125ms/step - accuracy: 0.6459 - loss: 3.4671 - val_accuracy: 0.4233 - val_loss: 3.6781 - learning_rate: 5.0000e-04\n",
            "Epoch 4/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.7578 - loss: 2.8718 - val_accuracy: 0.4581 - val_loss: 3.2411 - learning_rate: 5.0000e-04\n",
            "Epoch 5/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 154ms/step - accuracy: 0.8698 - loss: 2.4009 - val_accuracy: 0.4047 - val_loss: 3.1821 - learning_rate: 5.0000e-04\n",
            "Epoch 6/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9095 - loss: 2.0906 - val_accuracy: 0.5256 - val_loss: 2.7859 - learning_rate: 5.0000e-04\n",
            "Epoch 7/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 126ms/step - accuracy: 0.9459 - loss: 1.8370 - val_accuracy: 0.4209 - val_loss: 2.8841 - learning_rate: 5.0000e-04\n",
            "Epoch 8/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 156ms/step - accuracy: 0.9642 - loss: 1.6611 - val_accuracy: 0.3256 - val_loss: 3.2052 - learning_rate: 5.0000e-04\n",
            "Epoch 9/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 132ms/step - accuracy: 0.9746 - loss: 1.5012 - val_accuracy: 0.4233 - val_loss: 2.7596 - learning_rate: 5.0000e-04\n",
            "Epoch 10/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 126ms/step - accuracy: 0.9795 - loss: 1.3767 - val_accuracy: 0.3884 - val_loss: 2.8780 - learning_rate: 5.0000e-04\n",
            "Epoch 11/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 167ms/step - accuracy: 0.9732 - loss: 1.3068 - val_accuracy: 0.4860 - val_loss: 2.6099 - learning_rate: 5.0000e-04\n",
            "Epoch 12/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 152ms/step - accuracy: 0.9568 - loss: 1.2809 - val_accuracy: 0.6023 - val_loss: 1.9111 - learning_rate: 5.0000e-04\n",
            "Epoch 13/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 134ms/step - accuracy: 0.9771 - loss: 1.1974 - val_accuracy: 0.7837 - val_loss: 1.5370 - learning_rate: 5.0000e-04\n",
            "Epoch 14/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 154ms/step - accuracy: 0.9829 - loss: 1.1270 - val_accuracy: 0.6093 - val_loss: 1.9062 - learning_rate: 5.0000e-04\n",
            "Epoch 15/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 132ms/step - accuracy: 0.9902 - loss: 1.0696 - val_accuracy: 0.7814 - val_loss: 1.4829 - learning_rate: 5.0000e-04\n",
            "Epoch 16/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 127ms/step - accuracy: 0.9802 - loss: 1.0636 - val_accuracy: 0.5140 - val_loss: 2.1801 - learning_rate: 5.0000e-04\n",
            "Epoch 17/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 158ms/step - accuracy: 0.9769 - loss: 1.0638 - val_accuracy: 0.6953 - val_loss: 1.9185 - learning_rate: 5.0000e-04\n",
            "Epoch 18/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 161ms/step - accuracy: 0.9759 - loss: 1.0275 - val_accuracy: 0.7488 - val_loss: 1.5311 - learning_rate: 5.0000e-04\n",
            "Epoch 19/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9434 - loss: 1.1142 - val_accuracy: 0.8953 - val_loss: 1.0656 - learning_rate: 5.0000e-04\n",
            "Epoch 20/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 163ms/step - accuracy: 0.9699 - loss: 1.0194 - val_accuracy: 0.8093 - val_loss: 1.2859 - learning_rate: 5.0000e-04\n",
            "Epoch 21/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 161ms/step - accuracy: 0.9909 - loss: 0.9546 - val_accuracy: 0.9302 - val_loss: 0.9589 - learning_rate: 5.0000e-04\n",
            "Epoch 22/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 126ms/step - accuracy: 0.9951 - loss: 0.9266 - val_accuracy: 0.9372 - val_loss: 0.9333 - learning_rate: 5.0000e-04\n",
            "Epoch 23/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9713 - loss: 0.9540 - val_accuracy: 0.9372 - val_loss: 0.9287 - learning_rate: 5.0000e-04\n",
            "Epoch 24/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 149ms/step - accuracy: 0.9890 - loss: 0.9169 - val_accuracy: 0.9721 - val_loss: 0.8300 - learning_rate: 5.0000e-04\n",
            "Epoch 25/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 138ms/step - accuracy: 0.9801 - loss: 0.9163 - val_accuracy: 0.8930 - val_loss: 1.0405 - learning_rate: 5.0000e-04\n",
            "Epoch 26/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 153ms/step - accuracy: 0.9930 - loss: 0.8827 - val_accuracy: 0.7558 - val_loss: 1.4496 - learning_rate: 5.0000e-04\n",
            "Epoch 27/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 150ms/step - accuracy: 0.9864 - loss: 0.8740 - val_accuracy: 0.9651 - val_loss: 0.8312 - learning_rate: 5.0000e-04\n",
            "Epoch 28/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9744 - loss: 0.9142 - val_accuracy: 0.8767 - val_loss: 1.0036 - learning_rate: 5.0000e-04\n",
            "Epoch 29/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 160ms/step - accuracy: 0.9916 - loss: 0.8585 - val_accuracy: 0.8070 - val_loss: 1.2153 - learning_rate: 5.0000e-04\n",
            "Epoch 30/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 146ms/step - accuracy: 0.9785 - loss: 0.8945 - val_accuracy: 0.7302 - val_loss: 1.4752 - learning_rate: 5.0000e-04\n",
            "Epoch 31/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 139ms/step - accuracy: 0.9859 - loss: 0.8773 - val_accuracy: 0.8814 - val_loss: 1.1203 - learning_rate: 5.0000e-04\n",
            "Epoch 32/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 153ms/step - accuracy: 0.9840 - loss: 0.8624\n",
            "Epoch 32: ReduceLROnPlateau reducing learning rate to 0.00010000000474974513.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 158ms/step - accuracy: 0.9841 - loss: 0.8623 - val_accuracy: 0.7326 - val_loss: 1.5330 - learning_rate: 5.0000e-04\n",
            "Epoch 33/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 156ms/step - accuracy: 0.9940 - loss: 0.8343 - val_accuracy: 0.7767 - val_loss: 1.5200 - learning_rate: 1.0000e-04\n",
            "Epoch 34/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 127ms/step - accuracy: 0.9941 - loss: 0.8299 - val_accuracy: 0.8186 - val_loss: 1.2497 - learning_rate: 1.0000e-04\n",
            "Epoch 35/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 146ms/step - accuracy: 0.9970 - loss: 0.8135 - val_accuracy: 0.8186 - val_loss: 1.3109 - learning_rate: 1.0000e-04\n",
            "Epoch 36/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 155ms/step - accuracy: 0.9969 - loss: 0.8125 - val_accuracy: 0.8163 - val_loss: 1.3013 - learning_rate: 1.0000e-04\n",
            "Epoch 37/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 131ms/step - accuracy: 0.9953 - loss: 0.8119 - val_accuracy: 0.7953 - val_loss: 1.3263 - learning_rate: 1.0000e-04\n",
            "Epoch 38/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 151ms/step - accuracy: 0.9964 - loss: 0.8047 - val_accuracy: 0.8326 - val_loss: 1.1491 - learning_rate: 1.0000e-04\n",
            "Epoch 39/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 158ms/step - accuracy: 0.9970 - loss: 0.8086 - val_accuracy: 0.8256 - val_loss: 1.2041 - learning_rate: 1.0000e-04\n",
            "Epoch 40/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 126ms/step - accuracy: 0.9952 - loss: 0.8161\n",
            "Epoch 40: ReduceLROnPlateau reducing learning rate to 2.0000000949949027e-05.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 134ms/step - accuracy: 0.9952 - loss: 0.8160 - val_accuracy: 0.8419 - val_loss: 1.0139 - learning_rate: 1.0000e-04\n",
            "Epoch 41/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 125ms/step - accuracy: 0.9982 - loss: 0.8059 - val_accuracy: 0.8698 - val_loss: 0.9504 - learning_rate: 2.0000e-05\n",
            "Epoch 42/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m10s\u001b[0m 158ms/step - accuracy: 0.9981 - loss: 0.8017 - val_accuracy: 0.9116 - val_loss: 0.8897 - learning_rate: 2.0000e-05\n",
            "Epoch 43/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 146ms/step - accuracy: 0.9952 - loss: 0.8088 - val_accuracy: 0.9116 - val_loss: 0.8872 - learning_rate: 2.0000e-05\n",
            "Epoch 44/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 125ms/step - accuracy: 0.9966 - loss: 0.8000 - val_accuracy: 0.8977 - val_loss: 0.9136 - learning_rate: 2.0000e-05\n",
            "Epoch 45/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 155ms/step - accuracy: 0.9965 - loss: 0.7959 - val_accuracy: 0.9047 - val_loss: 0.9115 - learning_rate: 2.0000e-05\n",
            "Epoch 46/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 143ms/step - accuracy: 0.9980 - loss: 0.7993 - val_accuracy: 0.9093 - val_loss: 0.8839 - learning_rate: 2.0000e-05\n",
            "Epoch 47/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m9s\u001b[0m 138ms/step - accuracy: 0.9967 - loss: 0.7926 - val_accuracy: 0.8953 - val_loss: 0.8988 - learning_rate: 2.0000e-05\n",
            "Epoch 48/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - accuracy: 0.9985 - loss: 0.7969\n",
            "Epoch 48: ReduceLROnPlateau reducing learning rate to 4.000000262749381e-06.\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m11s\u001b[0m 153ms/step - accuracy: 0.9985 - loss: 0.7969 - val_accuracy: 0.9047 - val_loss: 0.8810 - learning_rate: 2.0000e-05\n",
            "Epoch 49/100\n",
            "\u001b[1m61/61\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m8s\u001b[0m 139ms/step - accuracy: 0.9987 - loss: 0.7929 - val_accuracy: 0.9279 - val_loss: 0.8519 - learning_rate: 4.0000e-06\n",
            "Epoch 49: early stopping\n",
            "Restoring model weights from the end of the best epoch: 24.\n",
            "\n",
            "--- FOLD 5 평가 (Subjects: [9, 10]) ---\n",
            "\u001b[1m34/34\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 43ms/step\n",
            "FOLD 5 Test F1-Score (Macro): 0.9828\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "       Act_1       1.00      1.00      1.00        96\n",
            "       Act_2       0.99      1.00      0.99        96\n",
            "       Act_3       1.00      1.00      1.00        96\n",
            "       Act_4       1.00      1.00      1.00        96\n",
            "       Act_5       1.00      1.00      1.00        96\n",
            "       Act_6       0.83      1.00      0.91        83\n",
            "       Act_7       1.00      0.99      0.99        88\n",
            "       Act_8       1.00      0.81      0.90        91\n",
            "       Act_9       1.00      1.00      1.00        96\n",
            "      Act_10       1.00      1.00      1.00        96\n",
            "      Act_11       1.00      1.00      1.00        96\n",
            "      Act_12       1.00      1.00      1.00        31\n",
            "\n",
            "    accuracy                           0.98      1061\n",
            "   macro avg       0.98      0.98      0.98      1061\n",
            "weighted avg       0.99      0.98      0.98      1061\n",
            "\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x1000 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "================= 모든 Fold 훈련/평가 완료 ==================\n"
          ]
        }
      ],
      "source": [
        "# --- 5. 교차 검증(CV) 및 훈련/평가 루프 (Patience 상향) ---\n",
        "\n",
        "# 결과 저장을 위한 리스트\n",
        "fold_f1_scores = []\n",
        "all_reports = []\n",
        "all_conf_matrices = []\n",
        "\n",
        "print(f\"--- {N_SPLITS}-Fold 교차 검증(수동 지정) 시작 ---\")\n",
        "\n",
        "# --- CV 루프 시작 ---\n",
        "for fold, test_subjects in enumerate(TEST_SUBJECT_PAIRS):\n",
        "    print(f\"\\n================= FOLD {fold+1}/{N_SPLITS} ==================\")\n",
        "\n",
        "    # 1. Fold별 데이터 분할\n",
        "    test_idx = np.where(np.isin(groups, test_subjects))[0]\n",
        "    train_idx = np.where(~np.isin(groups, test_subjects))[0]\n",
        "    X_train, X_test = X[train_idx], X[test_idx]\n",
        "    y_train, y_test = y[train_idx], y[test_idx]\n",
        "\n",
        "    print(f\"Train Subjects: {np.unique(groups[train_idx])}\")\n",
        "    print(f\"Test Subjects: {test_subjects}\")\n",
        "\n",
        "    # 2. 스케일링\n",
        "    scaler = StandardScaler()\n",
        "    X_train_reshaped = X_train.reshape(-1, NUM_CHANNELS)\n",
        "    scaler.fit(X_train_reshaped)\n",
        "    X_train = scaler.transform(X_train_reshaped).reshape(X_train.shape)\n",
        "    X_test = scaler.transform(X_test.reshape(-1, NUM_CHANNELS)).reshape(X_test.shape)\n",
        "\n",
        "    print(f\"X_train shape: {X_train.shape}, X_test shape: {X_test.shape}\")\n",
        "\n",
        "    # 3. 모델 빌드 및 컴파일 (Dropout 강화, LR 인하 버전)\n",
        "    model = build_hybrid_cnn_gru_model(\n",
        "        input_shape=(WINDOW_SIZE, NUM_CHANNELS),\n",
        "        num_classes=NUM_CLASSES\n",
        "    )\n",
        "\n",
        "    optimizer = tf.keras.optimizers.Adam(learning_rate=5e-4) # 0.0005\n",
        "    loss = tf.keras.losses.CategoricalCrossentropy(label_smoothing=0.1)\n",
        "\n",
        "    model.compile(optimizer=optimizer, loss=loss, metrics=['accuracy'])\n",
        "\n",
        "    # 3-1. 클래스 가중치 계산\n",
        "    y_train_labels = np.argmax(y_train, axis=1)\n",
        "    class_weights = compute_class_weight(\n",
        "        'balanced',\n",
        "        classes=np.unique(y_train_labels),\n",
        "        y=y_train_labels\n",
        "    )\n",
        "    class_weight_dict = dict(enumerate(class_weights))\n",
        "    print(f\"Class Weights (Fold {fold+1}): {class_weight_dict}\")\n",
        "\n",
        "\n",
        "    # 4. 모델 훈련\n",
        "    print(\"\\n--- 훈련 시작 ---\")\n",
        "\n",
        "    callbacks = [\n",
        "        # [수정] 모델이 최적점에 도달할 시간을 더 줍니다.\n",
        "        EarlyStopping(monitor='val_loss', mode='min', patience=25,\n",
        "                      verbose=1, restore_best_weights=True),\n",
        "        ReduceLROnPlateau(monitor='val_loss', mode='min', factor=0.2,\n",
        "                          patience=8, verbose=1)\n",
        "    ]\n",
        "\n",
        "    history = model.fit(\n",
        "        X_train, y_train,\n",
        "        epochs=EPOCHS,\n",
        "        batch_size=BATCH_SIZE,\n",
        "        validation_split=0.1,\n",
        "        callbacks=callbacks,\n",
        "        class_weight=class_weight_dict,\n",
        "        verbose=1\n",
        "    )\n",
        "\n",
        "    # 5. 평가 및 Confusion Matrix\n",
        "    print(f\"\\n--- FOLD {fold+1} 평가 (Subjects: {test_subjects}) ---\")\n",
        "\n",
        "    y_pred_probs = model.predict(X_test)\n",
        "    y_pred_labels = np.argmax(y_pred_probs, axis=1)\n",
        "    y_test_labels = np.argmax(y_test, axis=1)\n",
        "\n",
        "    f1_macro = f1_score(y_test_labels, y_pred_labels, average='macro')\n",
        "    fold_f1_scores.append(f1_macro)\n",
        "    print(f\"FOLD {fold+1} Test F1-Score (Macro): {f1_macro:.4f}\")\n",
        "\n",
        "    report = classification_report(y_test_labels, y_pred_labels, target_names=ACTIVITY_NAMES)\n",
        "    print(report)\n",
        "    all_reports.append(report)\n",
        "\n",
        "    cm = confusion_matrix(y_test_labels, y_pred_labels)\n",
        "    all_conf_matrices.append(cm)\n",
        "\n",
        "    plot_confusion_matrix(cm, ACTIVITY_NAMES, f\"Fold {fold+1} Confusion Matrix\")\n",
        "\n",
        "print(\"\\n================= 모든 Fold 훈련/평가 완료 ==================\")"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "EG1zEqw_GDok",
        "outputId": "cddbd8a9-4e8c-4c16-aa95-abdd78634953"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\n",
            "=======================================================\n",
            "          5-Fold 교차 검증 최종 결과 요약\n",
            "=======================================================\n",
            "Fold 1 (Subjects [1, 2]) F1-Score: 0.7589\n",
            "Fold 2 (Subjects [3, 4]) F1-Score: 0.8354\n",
            "Fold 3 (Subjects [5, 6]) F1-Score: 0.8660\n",
            "Fold 4 (Subjects [7, 8]) F1-Score: 0.9469\n",
            "Fold 5 (Subjects [9, 10]) F1-Score: 0.9828\n",
            "\n",
            "-------------------------------------------------------\n",
            "✅ 최종 평균 F1-Score (Macro): 0.8780 ± 0.0798\n",
            "-------------------------------------------------------\n",
            "\n",
            "--- 전체 Folds 합산 Confusion Matrix ---\n"
          ]
        },
        {
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 1200x1000 with 2 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# --- 5-Fold 교차 검증 최종 결과 요약 ---\n",
        "print(\"\\n=======================================================\")\n",
        "print(\"          5-Fold 교차 검증 최종 결과 요약\")\n",
        "print(\"=======================================================\")\n",
        "\n",
        "# fold_f1_scores 리스트에 5개의 결과가 모두 들어있는지 확인\n",
        "if len(fold_f1_scores) == N_SPLITS:\n",
        "    for i, f1 in enumerate(fold_f1_scores):\n",
        "        print(f\"Fold {i+1} (Subjects {TEST_SUBJECT_PAIRS[i]}) F1-Score: {f1:.4f}\")\n",
        "\n",
        "    mean_f1 = np.mean(fold_f1_scores)\n",
        "    std_f1 = np.std(fold_f1_scores)\n",
        "\n",
        "    print(\"\\n-------------------------------------------------------\")\n",
        "    print(f\"✅ 최종 평균 F1-Score (Macro): {mean_f1:.4f} ± {std_f1:.4f}\")\n",
        "    print(\"-------------------------------------------------------\")\n",
        "else:\n",
        "    print(f\"오류: {N_SPLITS}개의 Fold가 모두 실행되지 않았습니다. (저장된 F1: {len(fold_f1_scores)}개)\")\n",
        "\n",
        "\n",
        "# --- 전체 Fold의 Confusion Matrix 합산 및 시각화 ---\n",
        "print(\"\\n--- 전체 Folds 합산 Confusion Matrix ---\")\n",
        "\n",
        "if len(all_conf_matrices) == N_SPLITS:\n",
        "    total_cm = np.sum(all_conf_matrices, axis=0)\n",
        "    plot_confusion_matrix(total_cm, ACTIVITY_NAMES, \"Total Confusion Matrix (All Folds)\")\n",
        "else:\n",
        "    print(f\"오류: {N_SPLITS}개의 Fold가 모두 실행되지 않았습니다. (저장된 CM: {len(all_conf_matrices)}개)\")"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "mount_file_id": "1_7sciT8qH7hS8Rmx9_n68k_1zof-26e9",
      "authorship_tag": "ABX9TyMQiYlmU3XHgiXdPubAMtXO",
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}